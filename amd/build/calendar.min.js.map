{"version":3,"file":"calendar.min.js","sources":["../src/calendar.js"],"sourcesContent":["import {get_string as getString} from 'core/str';\nimport ModalForm from 'core_form/modalform';\nimport Prefetch from 'core/prefetch';\nimport {FilterManager} from './filter_manager';\nimport {FilterUI} from './filter_ui';\n\n/**\n * Wait for a global property to be available\n * @param {string} globalPropertyName\n * @returns {Promise}\n */\nconst theGlobalProperty = (globalPropertyName) => {\n    return new Promise((resolve) => {\n        const innerWait = () => {\n            if (!window[globalPropertyName]) {\n                setTimeout(innerWait, 20);\n            }\n            resolve();\n        };\n        innerWait();\n    });\n};\n\n/**\n * Initialize the calendar\n * @param {number} cmid - Course Module ID\n * @param {number} instanceid - Instance ID\n * @param {string} eventsource - URL for events\n * @param {string} lang - Language code\n * @param {Object} permissions - Permission object with isAdmin and isServiceTeam\n * @returns {Promise<void>}\n */\nexport async function init(cmid, instanceid, eventsource, lang, permissions) {\n    // Preload strings\n    Prefetch.prefetchString('mod_bookit', 'addbooking');\n    await theGlobalProperty('EventCalendar');\n\n    // String variables.\n    Prefetch.prefetchStrings('mod_bookit', ['addbooking']);\n    Prefetch.prefetchStrings('core', ['today', 'month', 'week']);\n    Prefetch.prefetchStrings('core_calendar', ['day', 'upcomingevents']);\n\n    const str_request_booking = await getString('addbooking', 'mod_bookit');\n    const str_today = await getString('today', 'core');\n    const str_month = await getString('month', 'core');\n    const str_week = await getString('week', 'core');\n    const str_day = await getString('day', 'core_calendar');\n    const str_list = await getString('upcomingevents', 'core_calendar');\n\n    // Choose view based on screen size\n    let viewType = 'timeGridWeek';\n    if (window.screen.width <= 1000) {\n        viewType = 'listWeek';\n    }\n\n    // Initialize filters\n    const filterManager = new FilterManager();\n    const filterUI = new FilterUI();\n    await filterUI.init(permissions.isAdmin || permissions.isServiceTeam);\n    filterManager.init();\n\n    // Initialize calendar\n    const calendar = new window.EventCalendar(document.getElementById('ec'), {\n        locale: lang,\n        view: viewType,\n        firstDay: 1,\n        scrollTime: '09:00:00',\n        slotMinTime: '07:00:00',\n        slotMaxTime: '22:00:00',\n        dayMaxEvents: true,\n        nowIndicator: true,\n        selectable: true,\n        eventStartEditable: false,\n        eventDurationEditable: false,\n        hiddenDays: [0, 6], // Hide Sunday and Saturday\n        buttonText: function (text) {\n            text.today = str_today;\n            text.dayGridMonth = str_month;\n            text.timeGridWeek = str_week;\n            text.timeGridDay = str_day;\n            text.listWeek = str_list;\n            return text;\n        },\n        customButtons: {\n            addButton: {\n                text: str_request_booking,\n                click: function() {\n                    const modalForm = new ModalForm({\n                        formClass: \"mod_bookit\\\\form\\\\edit_event_form\",\n                        args: {\n                            cmid: cmid,\n                        },\n                        modalConfig: {title: getString('edit_event', 'mod_bookit')},\n                    });\n                    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n                        calendar.refetchEvents();\n                    });\n                    modalForm.show();\n                }\n            }\n        },\n        dateClick: function(info) {\n            const modalForm = new ModalForm({\n                formClass: \"mod_bookit\\\\form\\\\edit_event_form\",\n                args: {\n                    cmid: cmid,\n                    startdate: info.dateStr,\n                },\n                modalConfig: {title: getString('add_event', 'mod_bookit')},\n            });\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n                calendar.refetchEvents();\n            });\n            modalForm.show();\n        },\n        eventClick: function(info) {\n            if (info.event.title.toLowerCase() !== \"reserved\") {\n                const modalForm = new ModalForm({\n                    formClass: \"mod_bookit\\\\form\\\\edit_event_form\",\n                    args: {\n                        cmid: cmid,\n                        id: info.event.id,\n                    },\n                    modalConfig: {title: getString('edit_event', 'mod_bookit')},\n                });\n                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n                    calendar.refetchEvents();\n                });\n                modalForm.show();\n            }\n        },\n        headerToolbar: {\n            start: 'prev,next today addButton',\n            center: 'title',\n            end: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        },\n        eventSources: [{\n            url: eventsource,\n            method: 'POST',\n            extraParams: function() {\n                // Base parameters\n                const params = {\n                    id: String(cmid)\n                };\n\n                // Filter parameters from filterManager\n                const filters = filterManager.filters;\n                if (filters) {\n                    if (filters.search) {\n                        params.search = String(filters.search);\n                    }\n                    if (filters.room) {\n                        params.roomid = String(filters.room);\n                    }\n                    if (filters.faculty) {\n                        params.facultyid = String(filters.faculty);\n                    }\n                    if (filters.status !== undefined && filters.status !== '') {\n                        params.status = parseInt(filters.status, 10);\n                    }\n                    if (filters.timeslot) {\n                        params.timeslot = String(filters.timeslot);\n                    }\n                }\n                return params;\n            }\n        }]\n    });\n\n    // Monitor filter changes\n    document.addEventListener('filterchange', (event) => {\n        // Update filter values\n        filterManager.filters = event.detail;\n        // Reload calendar\n        calendar.refetchEvents();\n    });\n}\n"],"names":["cmid","instanceid","eventsource","lang","permissions","prefetchString","globalPropertyName","Promise","resolve","innerWait","window","setTimeout","prefetchStrings","str_request_booking","str_today","str_month","str_week","str_day","str_list","viewType","screen","width","filterManager","FilterManager","filterUI","FilterUI","init","isAdmin","isServiceTeam","calendar","EventCalendar","document","getElementById","locale","view","firstDay","scrollTime","slotMinTime","slotMaxTime","dayMaxEvents","nowIndicator","selectable","eventStartEditable","eventDurationEditable","hiddenDays","buttonText","text","today","dayGridMonth","timeGridWeek","timeGridDay","listWeek","customButtons","addButton","click","modalForm","ModalForm","formClass","args","modalConfig","title","addEventListener","events","FORM_SUBMITTED","refetchEvents","show","dateClick","info","startdate","dateStr","eventClick","event","toLowerCase","id","headerToolbar","start","center","end","eventSources","url","method","extraParams","params","String","filters","search","room","roomid","faculty","facultyid","undefined","status","parseInt","timeslot","detail"],"mappings":"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"}