{"version":3,"file":"master_checklist.min.js","sources":["../src/master_checklist.js"],"sourcesContent":["import { BaseComponent } from 'core/reactive';\nimport { masterChecklistReactiveInstance } from 'mod_bookit/master_checklist_reactive';\nimport { SELECTORS } from 'mod_bookit/master_checklist_reactive';\nimport ModalEvents from 'core/modal_events';\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport * as Toast from 'core/toast';\nimport {getString} from 'core/str';\n\nexport default class extends BaseComponent {\n\n    create(descriptor) {\n\n        window.console.log('create component: ' + descriptor.reactive.name);\n        window.console.log(\"selectors in create master checklist: \", SELECTORS);\n\n    }\n\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: masterChecklistReactiveInstance,\n            selectors: selectors || SELECTORS,\n        });\n    }\n\n    getWatchers() {\n        window.console.log('GET WATCHERS');\n        return [\n            {watch: 'state:updated', handler: this._handleStateEvent},\n            {watch: 'checklistcategories:created', handler: this._handleCategoryCreatedEvent},\n            {watch: 'checklistitems:created', handler: this._handleItemCreatedEvent},\n        ];\n    }\n\n    stateReady(state) {\n\n        window.console.log('state ready');\n        window.console.log(state);\n\n        const name = state.masterchecklists.get(1).name;\n\n        window.console.log(this.selectors.MASTER_CHECKLIST_TITLE);\n\n        const titleElement = this.getElement(this.selectors.MASTER_CHECKLIST_TITLE);\n\n        window.console.log(titleElement);\n\n        titleElement.innerHTML = name;\n\n        this.addEventListener(this.getElement(this.selectors.ADD_CHECKLIST_ITEM_BUTTON), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('ADD CHECKLIST ITEM BUTTON CLICKED');\n            this._handleAddChecklistItemButtonClick(e);\n        });\n\n        this.addEventListener(this.getElement(this.selectors.ADD_CHECKLIST_CATEGORY_BUTTON), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('ADD CHECKLIST CATEGORY BUTTON CLICKED');\n            this._handleAddChecklistCategoryButtonClick(e);\n        });\n    }\n\n    _handleStateEvent(event) {\n        // window.console.log('handle state event');\n    }\n\n    async _handleAddChecklistItemButtonClick(event) {\n        window.console.log('handle add checklist item button click');\n\n        window.console.log(Array.from(this.reactive.state.checklistcategories.values()));\n\n        // TODO dont do this twice\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklistitem_form\",\n            args: {\n                masterid: 1,\n                categories: Array.from(this.reactive.state.checklistcategories.values()),\n            },\n            modalConfig: {\n                title: await getString('checklistitem', 'mod_bookit'),\n            },\n\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n        });\n\n        modalForm.show().then(() => {\n            // This `modal` is the underlying Modal instance.\n            const modalRoot = modalForm.modal.getRoot()[0];\n\n            window.console.log(modalForm.modal);\n            window.console.log('Modal root:', modalRoot);\n\n\n            // Create delete button.\n            const deleteButton = document.createElement('button');\n            deleteButton.type = 'button';\n            deleteButton.className = 'btn btn-danger';\n            deleteButton.textContent = 'Delete';\n\n            // Optional: style or position\n            deleteButton.style.marginRight = 'auto';\n\n            // Add it to the modal footer.\n            const footer = modalRoot.querySelector('.modal-footer');\n            if (footer) {\n                footer.prepend(deleteButton); // Or .append() if you prefer\n            }\n\n            // Add click handler\n            deleteButton.addEventListener('click', () => {\n                // const form = modalForm.getForm();\n                // const categoryid = form.elements['id']?.value;\n                // if (confirm('Are you sure you want to delete this category?')) {\n                //     console.log('Deleting category with id:', categoryid);\n                //     modal.hide(); // Close modal manually\n                // }\n                modalForm.modal.destroy();\n            });\n        });\n    }\n\n    async _handleAddChecklistCategoryButtonClick(event) {\n        window.console.log('handle add checklist category button click');\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklist_category_form\",\n            args: {\n                masterid: 1\n            },\n            modalConfig: {\n                title: await getString('checklistcategory', 'mod_bookit'),\n            },\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n\n        });\n\n        modalForm.show();\n    }\n\n    _handleCategoryCreatedEvent(event) {\n        window.console.log('handle category created event');\n\n        Templates.renderForPromise('mod_bookit/bookit_checklist_category',\n            {\n                id: event.element.id,\n                name: event.element.name,\n                order: event.element.order\n            })\n            .then(({html, js}) => {\n                Templates.appendNodeContents(this.getElement(this.selectors.TABLE), html, js);\n            })\n            .then(async () => {\n                Toast.add(await getString('checklistcategorysuccess', 'mod_bookit'),\n                    {type: 'success' });\n            })\n            .catch();\n    }\n\n    _handleItemCreatedEvent(event) {\n        window.console.log('handle item created event');\n\n        const roomName = this.reactive.state.rooms.get(1).name;\n\n        const targetElement = this.getElement(`#bookit-master-checklist-tbody-category-${event.element.category}`);\n\n        window.console.log('event: ', event);\n\n        Templates.renderForPromise('mod_bookit/bookit_checklist_item',\n            {\n                id: event.element.id,\n                name: event.element.name,\n                order: event.element.order,\n                categoryid: event.element.category,\n                roomid: event.element.roomid,\n                roomname: event.element.roomname,\n                roleid: event.element.roleid,\n                rolename: event.element.rolename,\n            })\n            .then(({html, js}) => {\n                // window.console.log('rendered item');\n                // window.console.log(html);\n                // window.console.log(js);\n                Templates.appendNodeContents(targetElement, html, js);\n            })\n            .then(async () => {\n                Toast.add(await getString('checklistitemsuccess', 'mod_bookit'),\n                    {type: 'success' });\n            })\n            .catch(error => {\n                window.console.error('Error rendering checklist item:', error);\n            });\n    }\n\n}"],"names":["BaseComponent","create","descriptor","window","console","log","reactive","name","SELECTORS","target","selectors","this","element","document","querySelector","masterChecklistReactiveInstance","getWatchers","watch","handler","_handleStateEvent","_handleCategoryCreatedEvent","_handleItemCreatedEvent","stateReady","state","masterchecklists","get","MASTER_CHECKLIST_TITLE","titleElement","getElement","innerHTML","addEventListener","ADD_CHECKLIST_ITEM_BUTTON","e","preventDefault","_handleAddChecklistItemButtonClick","ADD_CHECKLIST_CATEGORY_BUTTON","_handleAddChecklistCategoryButtonClick","event","Array","from","checklistcategories","values","modalForm","ModalForm","formClass","args","masterid","categories","modalConfig","title","events","FORM_SUBMITTED","response","stateManager","processUpdates","detail","show","then","modalRoot","modal","getRoot","deleteButton","createElement","type","className","textContent","style","marginRight","footer","prepend","destroy","renderForPromise","id","order","_ref","html","js","appendNodeContents","TABLE","async","Toast","add","catch","rooms","targetElement","category","categoryid","roomid","roomname","roleid","rolename","_ref2","error"],"mappings":"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"}