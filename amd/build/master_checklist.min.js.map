{"version":3,"file":"master_checklist.min.js","sources":["../src/master_checklist.js"],"sourcesContent":["import { BaseComponent } from 'core/reactive';\nimport { masterChecklistReactiveInstance } from 'mod_bookit/master_checklist_reactive';\nimport { SELECTORS } from 'mod_bookit/master_checklist_reactive';\nimport ModalEvents from 'core/modal_events';\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport * as Toast from 'core/toast';\nimport {getString} from 'core/str';\nimport Ajax from 'core/ajax';\n\nexport default class extends BaseComponent {\n\n    static getEvents() {\n        return {\n            categoryRendered: 'mod_bookit:master_checklist_category_rendered',\n        };\n    }\n\n    create(descriptor) {\n\n        window.console.log('create component: ' + descriptor.reactive.name);\n        window.console.log(\"selectors in create master checklist: \", SELECTORS);\n\n    }\n\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: masterChecklistReactiveInstance,\n            selectors: selectors || SELECTORS,\n        });\n    }\n\n    // static getEvents() {\n    //     return {\n    //         categoryRendered: 'mod_bookit:master_checklist_category_rendered',\n    //     };\n    // }\n\n    getWatchers() {\n        window.console.log('GET WATCHERS');\n        return [\n            {watch: 'state:updated', handler: this._handleStateEvent},\n            {watch: 'checklistcategories:created', handler: this._handleCategoryCreatedEvent},\n            {watch: 'checklistcategories:deleted', handler: this._handleCategoryDeletedEvent},\n            {watch: 'checklistcategories.name:updated', handler: this._handleCategoryNameUpdatedEvent},\n            {watch: 'checklistcategories.items:updated', handler: this._handleCategoryItemUpdatedEvent},\n            {watch: 'checklistitems:created', handler: this._handleItemCreatedEvent},\n            {watch: 'checklistitems:deleted', handler: this._handleItemDeletedEvent},\n            {watch: 'checklistitems:updated', handler: this._handleItemUpdatedEvent},\n        ];\n    }\n\n    stateReady(state) {\n\n        window.console.log('state ready');\n        window.console.log(state);\n\n        const name = state.masterchecklists.get(1).name;\n\n        window.console.log(this.selectors.MASTER_CHECKLIST_TITLE);\n\n        const titleElement = this.getElement(this.selectors.MASTER_CHECKLIST_TITLE);\n\n        window.console.log(titleElement);\n\n        titleElement.innerHTML = name;\n\n        this.addEventListener(this.getElement(this.selectors.ADD_CHECKLIST_ITEM_BUTTON), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('ADD CHECKLIST ITEM BUTTON CLICKED');\n            this._handleAddChecklistItemButtonClick(e);\n        });\n\n        this.addEventListener(this.getElement(this.selectors.ADD_CHECKLIST_CATEGORY_BUTTON), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('ADD CHECKLIST CATEGORY BUTTON CLICKED');\n            this._handleAddChecklistCategoryButtonClick(e);\n        });\n\n    }\n\n    _handleStateEvent(event) {\n        // window.console.log('handle state event');\n    }\n\n    async _handleAddChecklistItemButtonClick(event) {\n        window.console.log('handle add checklist item button click');\n\n        window.console.log(Array.from(this.reactive.state.checklistcategories.values()));\n\n        // TODO dont do this twice\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklistitem_form\",\n            // moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                masterid: 1,\n                itemid: null,\n                categories: Array.from(this.reactive.state.checklistcategories.values()),\n            },\n            modalConfig: {\n                title: await getString('checklistitem', 'mod_bookit'),\n            },\n\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n\n            // TODO dispatch event to update state\n            this.reactive.dispatch('checklistitemCreated', response.detail);\n            // this.reactive.stateManager.processUpdates(response.detail);\n        });\n\n        modalForm.show();\n    }\n\n    async _handleAddChecklistCategoryButtonClick(event) {\n        window.console.log('handle add checklist category button click');\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklist_category_form\",\n            // moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                masterid: 1\n            },\n            modalConfig: {\n                title: await getString('checklistcategory', 'mod_bookit'),\n            },\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n\n        });\n\n        modalForm.addEventListener(modalForm.events.NOSUBMIT_BUTTON_PRESSED, (response) => {\n            window.console.log('no submit button pressed');\n            window.console.log(response);\n            // this.reactive.stateManager.processUpdates(response.detail);\n\n        });\n\n        modalForm.show();\n    }\n\n    _handleCategoryCreatedEvent(event) {\n        window.console.log('handle category created event');\n\n        Templates.renderForPromise('mod_bookit/bookit_checklist_category',\n            {\n                id: event.element.id,\n                name: event.element.name,\n                order: event.element.order\n            })\n            .then(({html, js}) => {\n                Templates.appendNodeContents(this.getElement(this.selectors.TABLE), html, js);\n            })\n            .then(async () => {\n                Toast.add(await getString('checklistcategorysuccess', 'mod_bookit'),\n                    {type: 'success' });\n            })\n            .catch();\n    }\n\n    _handleItemCreatedEvent(event) {\n        window.console.log('handle item created event');\n\n        // const roomName = this.reactive.state.rooms.get(1).name;\n\n        const targetElement = this.getElement(`#bookit-master-checklist-tbody-category-${event.element.category}`);\n\n        window.console.log('event: ', event);\n\n        Templates.renderForPromise('mod_bookit/bookit_checklist_item',\n            {\n                id: event.element.id,\n                title: event.element.title,\n                order: event.element.order,\n                categoryid: event.element.category,\n                roomid: event.element.roomid,\n                roomname: event.element.roomname,\n                roleid: event.element.roleid,\n                rolename: event.element.rolename,\n            })\n            .then(({html, js}) => {\n                // window.console.log('rendered item');\n                // window.console.log(html);\n                // window.console.log(js);\n                Templates.appendNodeContents(targetElement, html, js);\n            })\n            .then(async () => {\n                Toast.add(await getString('checklistitemsuccess', 'mod_bookit'),\n                    {type: 'success' });\n            })\n            .catch(error => {\n                window.console.error('Error rendering checklist item:', error);\n            });\n    }\n\n    _handleItemDeletedEvent(event) {\n        window.console.log('handle item deleted event');\n        window.console.log(event);\n        const targetElement = this.getElement(`#bookit-master-checklist-item-${event.element.id}`);\n        targetElement.remove();\n\n        Toast.add(getString('checklistitemdeleted', 'mod_bookit', {title: event.element.title}),\n            {type: 'success' });\n    }\n\n    _handleItemUpdatedEvent(event) {\n        window.console.log('handle item updated event');\n        window.console.log(event);\n\n        const targetElement = this.getElement(`#bookit-master-checklist-item-${event.element.id}`);\n\n        window.console.log('target element', targetElement);\n\n        // TODO if category is changed, element needs to be moved, not just replaced\n\n        Templates.renderForPromise('mod_bookit/bookit_checklist_item',\n            {\n                id: event.element.id,\n                title: event.element.title,\n                order: event.element.order,\n                categoryid: event.element.category,\n                roomid: event.element.roomid,\n                roomname: event.element.roomname,\n                roleid: event.element.roleid,\n                rolename: event.element.rolename,\n            })\n            .then(({html, js}) => {\n                window.console.log('rendered item');\n                window.console.log(html);\n                // window.console.log(js);\n                Templates.replaceNode(targetElement, html, js);\n            })\n            .then(async () => {\n                Toast.add(await getString('checklistitemupdatesuccess', 'mod_bookit'),\n                    {type: 'success' });\n                    // this.dispatchEvent(this.events.categoryRendered, {\n                    //     component: this\n                    // });\n            })\n            .catch(error => {\n                window.console.error('Error rendering checklist item:', error);\n            });\n    }\n\n    _handleCategoryDeletedEvent(event) {\n        window.console.log('handle category deleted event');\n        window.console.log(event);\n\n        const targetElement = this.getElement(`#bookit-master-checklist-tbody-category-${event.element.id}`);\n\n        targetElement.remove();\n\n        Toast.add(getString('checklistcategorydeleted', 'mod_bookit', {name: event.element.name}),\n            {type: 'success' });\n    }\n\n    _handleCategoryNameUpdatedEvent(event) {\n        window.console.log('handle category name updated event');\n        window.console.log(event);\n\n        const targetElement = this.getElement(`#bookit-master-checklist-category-row-${event.element.id}`);\n\n        window.console.log('target element', targetElement);\n\n        Templates.renderForPromise('mod_bookit/bookit_checklist_category_row',\n            {\n                id: event.element.id,\n                name: event.element.name,\n                order: event.element.order,\n            })\n            .then(({html, js}) => {\n                // window.console.log('rendered category');\n                // window.console.log(html);\n                // window.console.log(js);\n                Templates.replaceNode(targetElement, html, js);\n                // this.dispatchEvent(this.events.categoryRendered, {\n                //     foo: 'bar'\n                // });\n            })\n            .then(async () => {\n                Toast.add(await getString('checklistcategoryupdatesuccess', 'mod_bookit'),\n                    {type: 'success' });\n                    this.dispatchEvent(this.events.categoryRendered, {\n                        categoryId: event.element.id\n                    });\n            })\n            .catch(error => {\n                window.console.error('Error rendering checklist category:', error);\n            });\n\n    }\n\n    async _handleCategoryItemUpdatedEvent(event) {\n        window.console.log('handle category item updated event');\n        window.console.log(event);\n\n        const targetElement = this.getElement(`#bookit-master-checklist-tbody-category-${event.element.id}`);\n\n        window.console.log('target element', targetElement);\n\n        const category = this.reactive.state.checklistcategories.get(event.element.id);\n        window.console.log('category in _handleCategoryItemUpdatedEvent', category);\n\n        const formDataObj = {\n            id: category.id,\n            masterid: 1,\n            name: category.name,\n            checklistitems: category.items,\n            action: 'put',\n            _qf__mod_bookit_form_edit_checklist_category_form: 1,\n        };\n\n        const formData = new URLSearchParams(formDataObj).toString();\n\n        window.console.log('formData', formData);\n\n        Ajax.call([{\n            methodname: 'core_form_dynamic_form',\n            args: {\n                formdata: formData,\n                form: 'mod_bookit\\\\form\\\\edit_checklist_category_form'\n            }\n        }])[0]\n        .then((response) => {\n\n            window.console.log('AJAX response received');\n            window.console.log(response);\n\n            const data = JSON.parse(response.data);\n\n            window.console.log('data', data);\n            window.console.log(data[0].fields.items);\n            const itemsArray = data[0].fields.items.split(',').map(item => parseInt(item));\n            window.console.log('Items as array:', itemsArray);\n\n            // Now you can use itemsArray for rendering the ordered category items\n            itemsArray.forEach(item => {\n                window.console.log('item', item);\n            });\n            // TODO render the new ordered category items\n\n            // if (!response.submitted) {\n            //     // Form was not submitted because validation failed.\n            //     const promise = new Promise(\n            //         resolve => resolve({html: response.html, js: Fragment.processCollectedJavascript(response.javascript)}));\n            //     this.modal.setBodyContent(promise);\n            //     this.enableButtons();\n            //     this.trigger(this.events.SERVER_VALIDATION_ERROR);\n            // } else {\n            //     // Form was submitted properly. Hide the modal and execute callback.\n            //     const data = JSON.parse(response.data);\n            //     FormChangeChecker.markFormSubmitted(form[0]);\n            //     const event = this.trigger(this.events.FORM_SUBMITTED, data);\n            //     if (!event.defaultPrevented) {\n            //         this.modal.hide();\n            //     }\n            // }\n            return null;\n        })\n        .catch(exception => {\n            window.console.error('AJAX error:', exception);\n            // this.enableButtons();\n            // this.onSubmitError(exception);\n        });\n    }\n\n}"],"names":["BaseComponent","categoryRendered","create","descriptor","window","console","log","reactive","name","SELECTORS","target","selectors","this","element","document","querySelector","masterChecklistReactiveInstance","getWatchers","watch","handler","_handleStateEvent","_handleCategoryCreatedEvent","_handleCategoryDeletedEvent","_handleCategoryNameUpdatedEvent","_handleCategoryItemUpdatedEvent","_handleItemCreatedEvent","_handleItemDeletedEvent","_handleItemUpdatedEvent","stateReady","state","masterchecklists","get","MASTER_CHECKLIST_TITLE","titleElement","getElement","innerHTML","addEventListener","ADD_CHECKLIST_ITEM_BUTTON","e","preventDefault","_handleAddChecklistItemButtonClick","ADD_CHECKLIST_CATEGORY_BUTTON","_handleAddChecklistCategoryButtonClick","event","Array","from","checklistcategories","values","modalForm","ModalForm","formClass","args","masterid","itemid","categories","modalConfig","title","events","FORM_SUBMITTED","response","dispatch","detail","show","stateManager","processUpdates","NOSUBMIT_BUTTON_PRESSED","renderForPromise","id","order","then","_ref","html","js","appendNodeContents","TABLE","async","Toast","add","type","catch","targetElement","category","categoryid","roomid","roomname","roleid","rolename","_ref2","error","remove","_ref3","replaceNode","_ref4","dispatchEvent","categoryId","formDataObj","checklistitems","items","action","_qf__mod_bookit_form_edit_checklist_category_form","formData","URLSearchParams","toString","call","methodname","formdata","form","data","JSON","parse","fields","itemsArray","split","map","item","parseInt","forEach","exception"],"mappings":"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"}