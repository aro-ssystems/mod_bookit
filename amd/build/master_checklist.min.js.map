{"version":3,"file":"master_checklist.min.js","sources":["../src/master_checklist.js"],"sourcesContent":["import { BaseComponent } from 'core/reactive';\nimport { masterChecklistReactiveInstance } from 'mod_bookit/master_checklist_reactive';\nimport { SELECTORS } from 'mod_bookit/master_checklist_reactive';\nimport ModalEvents from 'core/modal_events';\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport * as Toast from 'core/toast';\nimport {getString} from 'core/str';\n\nexport default class extends BaseComponent {\n\n    create(descriptor) {\n\n        window.console.log('create component: ' + descriptor.reactive.name);\n        window.console.log(\"selectors in create master checklist: \", SELECTORS);\n\n    }\n\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: masterChecklistReactiveInstance,\n            selectors: selectors || SELECTORS,\n        });\n    }\n\n    getWatchers() {\n        window.console.log('GET WATCHERS');\n        return [\n            {watch: 'state:updated', handler: this._handleStateEvent},\n            {watch: 'checklistcategories:created', handler: this._handleCategoryCreatedEvent},\n            {watch: 'checklistitems:created', handler: this._handleItemCreatedEvent},\n        ];\n    }\n\n    stateReady(state) {\n\n        window.console.log('state ready');\n        window.console.log(state);\n\n        const name = state.masterchecklists.get(1).name;\n\n        window.console.log(this.selectors.MASTER_CHECKLIST_TITLE);\n\n        const titleElement = this.getElement(this.selectors.MASTER_CHECKLIST_TITLE);\n\n        window.console.log(titleElement);\n\n        titleElement.innerHTML = name;\n\n        this.addEventListener(this.getElement(this.selectors.ADD_CHECKLIST_ITEM_BUTTON), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('ADD CHECKLIST ITEM BUTTON CLICKED');\n            this._handleAddChecklistItemButtonClick(e);\n        });\n\n        this.addEventListener(this.getElement(this.selectors.ADD_CHECKLIST_CATEGORY_BUTTON), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('ADD CHECKLIST CATEGORY BUTTON CLICKED');\n            this._handleAddChecklistCategoryButtonClick(e);\n        });\n    }\n\n    _handleStateEvent(event) {\n        // window.console.log('handle state event');\n    }\n\n    async _handleAddChecklistItemButtonClick(event) {\n        window.console.log('handle add checklist item button click');\n\n        window.console.log(Array.from(this.reactive.state.checklistcategories.values()));\n\n        // TODO dont do this twice\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklistitem_form\",\n            // moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                masterid: 1,\n                itemid: null,\n                categories: Array.from(this.reactive.state.checklistcategories.values()),\n            },\n            modalConfig: {\n                title: await getString('checklistitem', 'mod_bookit'),\n            },\n\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n        });\n\n        modalForm.show();\n    }\n\n    async _handleAddChecklistCategoryButtonClick(event) {\n        window.console.log('handle add checklist category button click');\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklist_category_form\",\n            // moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                masterid: 1\n            },\n            modalConfig: {\n                title: await getString('checklistcategory', 'mod_bookit'),\n            },\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n\n        });\n\n        modalForm.addEventListener(modalForm.events.NOSUBMIT_BUTTON_PRESSED, (response) => {\n            window.console.log('no submit button pressed');\n            window.console.log(response);\n            // this.reactive.stateManager.processUpdates(response.detail);\n\n        });\n\n        modalForm.show();\n    }\n\n    _handleCategoryCreatedEvent(event) {\n        window.console.log('handle category created event');\n\n        Templates.renderForPromise('mod_bookit/bookit_checklist_category',\n            {\n                id: event.element.id,\n                name: event.element.name,\n                order: event.element.order\n            })\n            .then(({html, js}) => {\n                Templates.appendNodeContents(this.getElement(this.selectors.TABLE), html, js);\n            })\n            .then(async () => {\n                Toast.add(await getString('checklistcategorysuccess', 'mod_bookit'),\n                    {type: 'success' });\n            })\n            .catch();\n    }\n\n    _handleItemCreatedEvent(event) {\n        window.console.log('handle item created event');\n\n        const roomName = this.reactive.state.rooms.get(1).name;\n\n        const targetElement = this.getElement(`#bookit-master-checklist-tbody-category-${event.element.category}`);\n\n        window.console.log('event: ', event);\n\n        Templates.renderForPromise('mod_bookit/bookit_checklist_item',\n            {\n                id: event.element.id,\n                title: event.element.title,\n                order: event.element.order,\n                categoryid: event.element.category,\n                roomid: event.element.roomid,\n                roomname: event.element.roomname,\n                roleid: event.element.roleid,\n                rolename: event.element.rolename,\n            })\n            .then(({html, js}) => {\n                // window.console.log('rendered item');\n                // window.console.log(html);\n                // window.console.log(js);\n                Templates.appendNodeContents(targetElement, html, js);\n            })\n            .then(async () => {\n                Toast.add(await getString('checklistitemsuccess', 'mod_bookit'),\n                    {type: 'success' });\n            })\n            .catch(error => {\n                window.console.error('Error rendering checklist item:', error);\n            });\n    }\n\n}"],"names":["BaseComponent","create","descriptor","window","console","log","reactive","name","SELECTORS","target","selectors","this","element","document","querySelector","masterChecklistReactiveInstance","getWatchers","watch","handler","_handleStateEvent","_handleCategoryCreatedEvent","_handleItemCreatedEvent","stateReady","state","masterchecklists","get","MASTER_CHECKLIST_TITLE","titleElement","getElement","innerHTML","addEventListener","ADD_CHECKLIST_ITEM_BUTTON","e","preventDefault","_handleAddChecklistItemButtonClick","ADD_CHECKLIST_CATEGORY_BUTTON","_handleAddChecklistCategoryButtonClick","event","Array","from","checklistcategories","values","modalForm","ModalForm","formClass","args","masterid","itemid","categories","modalConfig","title","events","FORM_SUBMITTED","response","stateManager","processUpdates","detail","show","NOSUBMIT_BUTTON_PRESSED","renderForPromise","id","order","then","_ref","html","js","appendNodeContents","TABLE","async","Toast","add","type","catch","rooms","targetElement","category","categoryid","roomid","roomname","roleid","rolename","_ref2","error"],"mappings":"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"}