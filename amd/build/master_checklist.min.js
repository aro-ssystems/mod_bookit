define("mod_bookit/master_checklist",["exports","core/reactive","mod_bookit/master_checklist_reactive","core_form/modalform","core/templates","core/toast","core/str","core/ajax","mod_bookit/checklist_helper"],(function(_exports,_reactive,_master_checklist_reactive,_modalform,_templates,Toast,_str,_ajax,_checklist_helper){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modalform=_interopRequireDefault(_modalform),_templates=_interopRequireDefault(_templates),Toast=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Toast),_ajax=_interopRequireDefault(_ajax),_checklist_helper=_interopRequireDefault(_checklist_helper);class _default extends _reactive.BaseComponent{static getEvents(){return{categoryRendered:"mod_bookit:master_checklist_category_rendered"}}static init(target,selectors){return new this({element:document.querySelector(target),reactive:_master_checklist_reactive.masterChecklistReactiveInstance,selectors:selectors||_master_checklist_reactive.SELECTORS})}create(){this.helper=new _checklist_helper.default}getWatchers(){return[{watch:"checklistcategories:created",handler:this._handleCategoryCreatedEvent},{watch:"checklistcategories:deleted",handler:this._handleCategoryDeletedEvent},{watch:"checklistcategories.name:updated",handler:this._handleCategoryNameUpdatedEvent},{watch:"checklistitems:created",handler:this._handleItemCreatedEvent},{watch:"checklistitems:deleted",handler:this._handleItemDeletedEvent},{watch:"checklistitems.categoryid:updated",handler:this._handleItemCategoryUpdatedEvent},{watch:"checklistitems.title:updated",handler:this._replaceRenderedItem},{watch:"checklistitems.roomids:updated",handler:this._replaceRenderedItem},{watch:"checklistitems.roleids:updated",handler:this._replaceRenderedItem}]}stateReady(state){const name=state.masterchecklists.get(1).name;this.getElement(this.selectors.MASTER_CHECKLIST_TITLE).innerHTML=name,this.addEventListener(this.getElement(this.selectors.ADD_CHECKLIST_ITEM_BUTTON),"click",(e=>{e.preventDefault(),this._handleAddChecklistItemButtonClick(e)})),this.addEventListener(this.getElement(this.selectors.ADD_CHECKLIST_CATEGORY_BUTTON),"click",(e=>{e.preventDefault(),this._handleAddChecklistCategoryButtonClick(e)})),this.addEventListener(this.getElement(this.selectors.ROLE_SELECT),"change",(e=>{this.reactive.dispatch("roleChanged",{id:e.target.value})})),this.addEventListener(this.getElement(this.selectors.ROOM_SELECT),"change",(e=>{this.reactive.dispatch("roomChanged",{id:e.target.value})}));document.querySelector(this.selectors.LOADING_SPINNER).classList.add("d-none");document.querySelector(this.selectors.MAIN_ELEMENT).classList.remove("d-none")}async _handleAddChecklistItemButtonClick(){const modalForm=new _modalform.default({formClass:"mod_bookit\\form\\edit_checklist_item_form",args:{masterid:1,itemid:null,categories:Array.from(this.reactive.state.checklistcategories.values())},modalConfig:{title:await(0,_str.getString)("checklistitem","mod_bookit")}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(response=>{this.reactive.dispatch("checklistitemCreated",response.detail)})),modalForm.show()}async _handleAddChecklistCategoryButtonClick(){const modalForm=new _modalform.default({formClass:"mod_bookit\\form\\edit_checklist_category_form",args:{masterid:1},modalConfig:{title:await(0,_str.getString)("checklistcategory","mod_bookit")}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(response=>{this.reactive.stateManager.processUpdates(response.detail)})),modalForm.show()}_handleCategoryCreatedEvent(event){_templates.default.renderForPromise("mod_bookit/bookit_checklist_category",{id:event.element.id,name:event.element.name,order:event.element.order,masterid:1,type:"category"}).then((_ref=>{let{html:html,js:js}=_ref;_templates.default.appendNodeContents(this.getElement(this.selectors.TABLE),html,js)})).then((async()=>{Toast.add(await(0,_str.getString)("checklistcategorysuccess","mod_bookit"),{type:"success"})})).catch((error=>{window.console.error("Error rendering checklist item:",error)}))}_handleItemCreatedEvent(event){const targetElement=this.getElement("#bookit-master-checklist-tbody-category-".concat(event.element.category)),roomNames=[];event.element.roomnames&&(window.console.log("ROOMNAMES: ",event.element.roomnames),event.element.roomnames.forEach((room=>{window.console.log("ROOM: ",room),roomNames.push({roomid:room.roomid,roomname:room.roomname})})));const roleNames=[];event.element.rolenames&&event.element.rolenames.forEach((role=>{roleNames.push({roleid:role.roleid,rolename:role.rolename})})),_templates.default.renderForPromise("mod_bookit/bookit_checklist_item",{id:event.element.id,title:event.element.title,order:event.element.order,categoryid:event.element.category,roomids:event.element.roomids,roomnames:roomNames,roleids:event.element.roleids,rolenames:roleNames,type:"item"}).then((_ref2=>{let{html:html,js:js}=_ref2;_templates.default.appendNodeContents(targetElement,html,js)})).then((async()=>{Toast.add(await(0,_str.getString)("checklistitemsuccess","mod_bookit"),{type:"success"})})).catch((error=>{window.console.error("Error rendering checklist item:",error)}))}_handleItemDeletedEvent(event){this.getElement("#bookit-master-checklist-item-".concat(event.element.id)).remove(),Toast.add((0,_str.getString)("checklistitemdeleted","mod_bookit",{title:event.element.title}),{type:"success"})}_replaceRenderedItem(event){window.console.log("REPLACING RENDERED ITEM: ",event);const fieldPart=event.action.split(".")[1].split(":")[0],elementSelector="span[data-bookit-checklistitem-tabledata-".concat(fieldPart,'-id="').concat(event.element.id,'"]');window.console.log("ELEMENT SELECTOR: ",elementSelector);const targetElement=this.getElement(elementSelector);if(window.console.log("TARGET ELEMENT: ",targetElement),fieldPart.endsWith("id")){const nameField=fieldPart.substring(0,fieldPart.length-2)+"name";nameField in event.element&&(targetElement.innerHTML=event.element[nameField])}else if(fieldPart.endsWith("ids")){const stateItem=this.reactive.state.checklistitems.get(event.element.id),roomsSelector="td[data-bookit-checklistitem-tabledata-".concat(fieldPart,'-id="').concat(event.element.id,'"]'),roomsElement=this.getElement(roomsSelector);window.console.log("ITEM ROOMS: ",stateItem.roomnames),_templates.default.renderForPromise("mod_bookit/bookit_checklist_item_rooms",{roomnames:stateItem.roomnames}).then((_ref3=>{let{html:html,js:js}=_ref3;_templates.default.replaceNode(roomsElement,html,js)})).then((async()=>{Toast.add(await(0,_str.getString)("checklistitemupdatesuccess","mod_bookit"),{type:"success"})})).catch((error=>{window.console.error("Error rendering checklist category:",error)}))}else targetElement.innerHTML=event.element[fieldPart]}_handleItemCategoryUpdatedEvent(event){const itemObject=this.reactive.state.checklistitems.get(event.element.id),formDataObj={itemid:itemObject.id,masterid:1,title:itemObject.title,categoryid:itemObject.categoryid,roomid:itemObject.roomid,roleid:itemObject.roleid,action:"put",_qf__mod_bookit_form_edit_checklist_item_form:1},formData=new URLSearchParams(formDataObj).toString();_ajax.default.call([{methodname:"core_form_dynamic_form",args:{formdata:formData,form:"mod_bookit\\form\\edit_checklist_item_form"}}])[0].then((response=>{})).catch((exception=>{window.console.error("AJAX error:",exception)}))}_handleCategoryDeletedEvent(event){this.getElement("#bookit-master-checklist-tbody-category-".concat(event.element.id)).remove(),Toast.add((0,_str.getString)("checklistcategorydeleted","mod_bookit",{name:event.element.name}),{type:"success"})}_handleCategoryNameUpdatedEvent(event){const targetElement=this.getElement("#bookit-master-checklist-category-row-".concat(event.element.id));_templates.default.renderForPromise("mod_bookit/bookit_checklist_category_row",{id:event.element.id,name:event.element.name,order:event.element.order}).then((_ref4=>{let{html:html,js:js}=_ref4;_templates.default.replaceNode(targetElement,html,js)})).then((async()=>{Toast.add(await(0,_str.getString)("checklistcategoryupdatesuccess","mod_bookit"),{type:"success"}),this.dispatchEvent(this.events.categoryRendered,{categoryId:event.element.id})})).catch((error=>{window.console.error("Error rendering checklist category:",error)}))}_handleRoleUpdate(event){document.querySelectorAll(this.selectors.ALL_CATEGORY_TABLE_ROWS).forEach((categoryElement=>{const items=[...this.reactive.state.checklistcategories.get(categoryElement.dataset.bookitCategoryId).items];var hasVisibleItems=!1;const activeRoom=this.reactive.state.activeRoom.id;items.forEach((itemId=>{const itemElement=document.querySelector('tr[data-bookit-checklistitem-id="'.concat(itemId,'"]'));0===activeRoom?parseInt(itemElement.dataset.bookitChecklistitemRole)===event.element.id||0===event.element.id?(itemElement.classList.remove("d-none"),hasVisibleItems||(hasVisibleItems=!0)):itemElement.classList.add("d-none"):activeRoom===parseInt(itemElement.dataset.bookitChecklistitemRoom)&&(parseInt(itemElement.dataset.bookitChecklistitemRole)===event.element.id||0===event.element.id)?(itemElement.classList.remove("d-none"),hasVisibleItems||(hasVisibleItems=!0)):itemElement.classList.add("d-none")})),hasVisibleItems?categoryElement.classList.remove("d-none"):categoryElement.classList.add("d-none")}))}_handleRoomUpdate(event){document.querySelectorAll(this.selectors.ALL_CATEGORY_TABLE_ROWS).forEach((categoryElement=>{this.reactive.state.checklistcategories.get(categoryElement.dataset.bookitCategoryId).items;this.reactive.state.activeRole.id}))}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=master_checklist.min.js.map