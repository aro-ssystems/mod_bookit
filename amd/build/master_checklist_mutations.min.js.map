{"version":3,"file":"master_checklist_mutations.min.js","sources":["../src/master_checklist_mutations.js"],"sourcesContent":["import Ajax from 'core/ajax';\n\nexport default class {\n    masterChecklistStateEvent(stateManager, data) {\n        const state = stateManager.state;\n        // window.console.log('state master checklist state event');\n        // window.console.log(data);\n        // window.console.log(state);\n    }\n\n    reOrderCategoryItems(stateManager, data) {\n        const state = stateManager.state;\n        window.console.log('reorder category items');\n        window.console.log(data);\n\n        stateManager.setReadOnly(false);\n\n        const category = state.checklistcategories.get(data.parentId);\n\n        window.console.log('category items order: ', category.items);\n\n        // Find the current positions of both IDs\n        const currentItems = [...category.items];\n        const idToMove = data.id;\n        const targetId = data.targetId;\n\n        const currentIndex = currentItems.indexOf(idToMove);\n        const targetIndex = currentItems.indexOf(targetId);\n\n        if (currentIndex !== -1 && targetIndex !== -1) {\n            // Remove the element to move\n            currentItems.splice(currentIndex, 1);\n\n            // Find the new target index (might have shifted if the item was removed before target)\n            const newTargetIndex = currentItems.indexOf(targetId);\n\n            // Insert the element after the target\n            currentItems.splice(newTargetIndex + 1, 0, idToMove);\n\n            // Update the items array\n            category.items = currentItems;\n\n            window.console.log('new category items order: ', category.items);\n        }\n\n        stateManager.setReadOnly(true);\n\n    }\n\n\n}"],"names":["masterChecklistStateEvent","stateManager","data","state","reOrderCategoryItems","window","console","log","setReadOnly","category","checklistcategories","get","parentId","items","currentItems","idToMove","id","targetId","currentIndex","indexOf","targetIndex","splice","newTargetIndex"],"mappings":"2QAGIA,0BAA0BC,aAAcC,MACtBD,aAAaE,MAM/BC,qBAAqBH,aAAcC,YACzBC,MAAQF,aAAaE,MAC3BE,OAAOC,QAAQC,IAAI,0BACnBF,OAAOC,QAAQC,IAAIL,MAEnBD,aAAaO,aAAY,SAEnBC,SAAWN,MAAMO,oBAAoBC,IAAIT,KAAKU,UAEpDP,OAAOC,QAAQC,IAAI,yBAA0BE,SAASI,aAGhDC,aAAe,IAAIL,SAASI,OAC5BE,SAAWb,KAAKc,GAChBC,SAAWf,KAAKe,SAEhBC,aAAeJ,aAAaK,QAAQJ,UACpCK,YAAcN,aAAaK,QAAQF,cAEnB,IAAlBC,eAAwC,IAAjBE,YAAoB,CAE3CN,aAAaO,OAAOH,aAAc,SAG5BI,eAAiBR,aAAaK,QAAQF,UAG5CH,aAAaO,OAAOC,eAAiB,EAAG,EAAGP,UAG3CN,SAASI,MAAQC,aAEjBT,OAAOC,QAAQC,IAAI,6BAA8BE,SAASI,OAG9DZ,aAAaO,aAAY"}