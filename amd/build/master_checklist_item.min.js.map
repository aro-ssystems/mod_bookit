{"version":3,"file":"master_checklist_item.min.js","sources":["../src/master_checklist_item.js"],"sourcesContent":["import { BaseComponent, DragDrop } from 'core/reactive';\nimport { masterChecklistReactiveInstance } from 'mod_bookit/master_checklist_reactive';\nimport { SELECTORS } from 'mod_bookit/master_checklist_reactive';\nimport ModalForm from 'core_form/modalform';\nimport { getString } from 'core/str';\n\nexport default class extends BaseComponent {\n\n    create(descriptor) {\n\n        const itemEditBtnSelector = 'EDIT_CHECKLISTITEM_BTN_' + descriptor.element.dataset.bookitChecklistitemId;\n        this.selectors[itemEditBtnSelector] = `#edit-checklistitem-${descriptor.element.dataset.bookitChecklistitemId}`;\n    }\n\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: masterChecklistReactiveInstance,\n            selectors: selectors || SELECTORS,\n        });\n    }\n\n    getWatchers() {\n        return [];\n    }\n\n    stateReady(state) {\n\n        this.dragdrop = new DragDrop(this);\n\n        const itemEditBtnSelector = 'EDIT_CHECKLISTITEM_BTN_' + this.element.dataset.bookitChecklistitemId;\n\n        this.addEventListener(this.getElement(this.selectors[itemEditBtnSelector]), 'click', (e) => {\n            e.preventDefault();\n            this._handleEditChecklistItemButtonClick(e);\n        });\n\n        this.shouldBeVisible();\n\n    }\n\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    validateDropData(dropdata) {\n        return true;\n    }\n\n    drop(dropdata, event) {\n        switch (dropdata.type) {\n            case 'item':\n                this._handleItemDrop(dropdata, event);\n                break;\n            case 'category':\n                this._handleCategoryDrop(dropdata, event);\n                break;\n            default:\n                throw new Error(`Unknown drop type: ${dropdata.type}`);\n        }\n    }\n\n\n    showDropZone(dropdata, event) {\n\n        const root = document.querySelector('html');\n        const primaryColor = getComputedStyle(root).getPropertyValue('--primary');\n\n        switch (dropdata.type) {\n            case 'item':\n            this.element.style.boxShadow = `0px -5px 0px 0px ${primaryColor} inset`;\n            this.element.style.transition = 'box-shadow 0.1s ease';\n                break;\n            case 'category':\n                const itemParentId = parseInt(this.element.dataset.bookitChecklistitemCategoryid);\n                const categoryParentElement = document.getElementById(`bookit-master-checklist-tbody-category-${itemParentId}`);\n                var isActive = parseInt(categoryParentElement.dataset.bookitCategoryActive || 0);\n                if (!isActive) {\n                    categoryParentElement.dataset.bookitCategoryActive = 1;\n                }\n                const categoryLastChild = categoryParentElement.lastElementChild;\n                setTimeout(() => {\n                    categoryParentElement.dataset.bookitCategoryActive = 0;\n                }, 5);\n                categoryLastChild.style.boxShadow = `0px -5px 0px 0px ${primaryColor} inset`;\n                categoryLastChild.style.transition = 'box-shadow 0.1s ease';\n                break;\n            default:\n                throw new Error(`Unknown drop type: ${dropdata.type}`);\n        }\n\n    }\n\n    hideDropZone(dropdata, event) {\n\n        switch (dropdata.type) {\n            case 'item':\n                this.element.style.boxShadow = '';\n                this.element.style.transition = '';\n                break;\n            case 'category':\n                const itemParentId = parseInt(this.element.dataset.bookitChecklistitemCategoryid);\n                const categoryParentElement = document.getElementById(`bookit-master-checklist-tbody-category-${itemParentId}`);\n                const categoryLastChild = categoryParentElement.lastElementChild;\n                var isActive = parseInt(categoryParentElement.dataset.bookitCategoryActive || 0);\n                if (!isActive) {\n                    categoryLastChild.style.boxShadow = '';\n                    categoryLastChild.style.transition = '';\n                }\n                break;\n            default:\n                throw new Error(`Unknown drop type: ${dropdata.type}`);\n        }\n\n    }\n\n    _handleItemDrop(dropdata, event) {\n        dropdata.targetId = parseInt(this.element.dataset.bookitChecklistitemId);\n        dropdata.targetParentId = parseInt(this.element.dataset.bookitChecklistitemCategoryid);\n\n        this.reactive.dispatch('reOrderCategoryItems', dropdata);\n\n        const itemObject = this.reactive.state.checklistitems.get(dropdata.id);\n\n        const itemElement = document.getElementById(`bookit-master-checklist-item-${itemObject.id}`);\n\n        const itemHasChangedParent = dropdata.parentId !== dropdata.targetParentId;\n\n        if (itemHasChangedParent) {\n            itemElement.dataset.bookitChecklistitemCategoryid = dropdata.targetParentId;\n        }\n\n        this.element.parentNode.insertBefore(itemElement, this.element.nextElementSibling);\n    }\n\n\n    _handleCategoryDrop(dropdata, event) {\n        const categoryElement = document.getElementById(`bookit-master-checklist-tbody-category-${dropdata.id}`);\n\n        dropdata.targetId = this.element.dataset.bookitChecklistitemCategoryid;\n        dropdata.targetParentId = categoryElement.dataset.bookitCategoryMasterid;\n\n        this.reactive.dispatch('reOrderCategories', dropdata);\n\n        const tableElement = document.querySelector(this.selectors.TABLE);\n\n        categoryElement.dataset.bookitCategoryActive = 1;\n\n        this.hideDropZone(dropdata, event);\n\n        tableElement.insertBefore(categoryElement, this.element.parentNode.nextElementSibling);\n    }\n\n\n    async _handleEditChecklistItemButtonClick(event) {\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklistitem_form\",\n            moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                masterid: 1,\n                itemid: event.currentTarget.value,\n                categories: Array.from(this.reactive.state.checklistcategories.values()),\n            },\n            modalConfig: {\n                title: await getString('checklistitem', 'mod_bookit'),\n            },\n\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n\n            if (response.detail[0].action === 'delete') {\n                window.console.log('item deleted - removing & unregistering');\n                this.reactive.dispatch('checklistitemDeleted',\n                    {\n                        id: parseInt(response.detail[0].fields.id),\n                        categoryid: parseInt(this.element.dataset.bookitChecklistitemCategoryid),\n                    });\n                this.remove();\n                return;\n            }\n\n            const parentId = parseInt(this.element.dataset.bookitChecklistitemCategoryid);\n\n            const updatedParentId = parseInt(response.detail[0].fields.categoryid);\n\n            if (parentId !== updatedParentId) {\n\n                const targetParentCategoryObject = this.reactive.state.checklistcategories.get(response.detail[0].fields.categoryid);\n\n                const copiedArray = [...targetParentCategoryObject.items];\n\n                const lastItemOfParentCategoryId = copiedArray.pop();\n\n                const data = {\n                    id: parseInt(this.element.dataset.bookitChecklistitemId),\n                    type: 'item',\n                    parentId: parentId,\n                    targetId: lastItemOfParentCategoryId,\n                    targetParentId: updatedParentId,\n                }\n\n                this.reactive.dispatch('reOrderCategoryItems', data);\n\n                this.element.dataset.bookitChecklistitemCategoryid = data.targetParentId;\n\n                const targetParentElement = document.getElementById(`bookit-master-checklist-tbody-category-${data.targetParentId}`);\n\n                targetParentElement.append(this.element);\n            }\n\n\n        });\n\n        modalForm.addEventListener(modalForm.events.LOADED, (response) => {\n            const deleteButton = modalForm.modal.getRoot().find('button[data-action=\"delete\"]');\n\n            deleteButton.on('click', (e) => {\n\n                modalForm.getFormNode().querySelector('input[name=\"action\"]').value = 'delete';\n                modalForm.submitFormAjax();\n\n            });\n\n            setTimeout(() => {\n                this._addResetButtonsToNotificationEditors(modalForm);\n            }, 800);\n        });\n\n        modalForm.show();\n\n    }\n\n    /**\n     * Add reset buttons to notification type message editors\n     * @param {ModalForm} modalForm The modal form instance\n     */\n    _addResetButtonsToNotificationEditors(modalForm) {\n        const notificationTypes = ['before_due', 'when_due', 'overdue', 'when_done'];\n\n        notificationTypes.forEach(type => {\n            const selector = `div[id^=\"fitem_id_${type}_messagetext_\"]`;\n            const formItems = modalForm.modal.getRoot().find(selector);\n\n            formItems.each((index, formItem) => {\n                const editorElement = formItem.querySelector('[data-fieldtype=\"editor\"]');\n\n                if (editorElement) {\n                    const resetButton = document.createElement('button');\n                    resetButton.type = 'button';\n                    resetButton.className = 'btn btn-secondary btn-sm';\n                    resetButton.innerHTML = 'Reset to default';\n                    resetButton.style.marginLeft = '10px';\n\n                    resetButton.addEventListener('click', async (e) => {\n                        e.preventDefault();\n                        const defaultMessage = await getString(`customtemplatedefaultmessage_${type}`, 'mod_bookit');\n\n                        const textarea = editorElement.querySelector('textarea');\n                        const iframe = editorElement.querySelector('iframe');\n\n                        if (textarea) {\n                            textarea.value = defaultMessage;\n                            textarea.dispatchEvent(new Event('input', { bubbles: true }));\n                            textarea.dispatchEvent(new Event('change', { bubbles: true }));\n\n                            if (window.M && window.M.editor_atto && textarea.id) {\n                                const editorInstance = window.M.editor_atto.get(textarea.id);\n                                if (editorInstance) {\n                                    editorInstance.updateOriginal();\n                                }\n                            }\n                        } else if (iframe) {\n                            try {\n                                const iframeDoc = iframe.contentDocument || iframe.contentWindow.document;\n                                const body = iframeDoc.querySelector('body');\n                                if (body) {\n                                    body.innerHTML = defaultMessage;\n\n                                    iframe.dispatchEvent(new Event('input', { bubbles: true }));\n                                    iframe.dispatchEvent(new Event('change', { bubbles: true }));\n                                }\n                            } catch (error) {\n                                console.log('Could not access iframe content:', error);\n                            }\n                        }\n\n                        if (window.tinymce) {\n                            const editorId = textarea?.id || editorElement.querySelector('[id]')?.id;\n                            if (editorId) {\n                                const editor = window.tinymce.get(editorId);\n                                if (editor) {\n                                    editor.setContent(defaultMessage);\n                                    editor.save();\n                                }\n                            }\n                        }\n                    });\n\n                    editorElement.appendChild(resetButton);\n                }\n            });\n        });\n    }\n\n    shouldBeVisible() {\n        const activeRoomId = this.reactive.state.activeRoom.id;\n        const activeRoleId = this.reactive.state.activeRole.id;\n        const itemId = parseInt(this.element.dataset.bookitChecklistitemId)\n        const stateItem = this.reactive.state.checklistitems.get(itemId);\n        const roomIds = stateItem.roomids;\n        const roleIds = stateItem.roleids;\n\n        var isInRoom = false;\n\n        if (activeRoomId == 0 || roomIds.includes(activeRoomId.toString())) {\n            isInRoom = true;\n            window.console.log('ITEM IS IN ROOM: ', itemId);\n        } else {\n            window.console.log('ITEM IS NOT IN ROOM: ', itemId);\n        }\n\n        var hasRole = false;\n\n        if (activeRoleId == 0 || roleIds.includes(activeRoleId.toString())) {\n            hasRole = true;\n            window.console.log('ITEM HAS ROLE: ', itemId);\n        } else {\n            window.console.log('ITEM DOES NOT HAVE ROLE: ', itemId);\n        }\n\n        const shouldBeVisible = isInRoom && hasRole;\n\n        if (!shouldBeVisible) {\n            this.element.classList.add('d-none');\n        } else {\n            this.element.classList.remove('d-none');\n        }\n\n        return shouldBeVisible;\n    }\n}"],"names":["BaseComponent","create","descriptor","itemEditBtnSelector","element","dataset","bookitChecklistitemId","selectors","target","this","document","querySelector","reactive","masterChecklistReactiveInstance","SELECTORS","getWatchers","stateReady","state","dragdrop","DragDrop","addEventListener","getElement","e","preventDefault","_handleEditChecklistItemButtonClick","shouldBeVisible","destroy","undefined","unregister","validateDropData","dropdata","drop","event","type","_handleItemDrop","_handleCategoryDrop","Error","showDropZone","root","primaryColor","getComputedStyle","getPropertyValue","style","boxShadow","transition","itemParentId","parseInt","bookitChecklistitemCategoryid","categoryParentElement","getElementById","bookitCategoryActive","categoryLastChild","lastElementChild","setTimeout","hideDropZone","targetId","targetParentId","dispatch","itemObject","checklistitems","get","id","itemElement","parentId","parentNode","insertBefore","nextElementSibling","categoryElement","bookitCategoryMasterid","tableElement","TABLE","modalForm","ModalForm","formClass","moduleName","args","masterid","itemid","currentTarget","value","categories","Array","from","checklistcategories","values","modalConfig","title","events","FORM_SUBMITTED","response","stateManager","processUpdates","detail","action","window","console","log","fields","categoryid","remove","updatedParentId","lastItemOfParentCategoryId","items","pop","data","append","LOADED","modal","getRoot","find","on","getFormNode","submitFormAjax","_addResetButtonsToNotificationEditors","show","forEach","selector","each","index","formItem","editorElement","resetButton","createElement","className","innerHTML","marginLeft","async","defaultMessage","textarea","iframe","dispatchEvent","Event","bubbles","M","editor_atto","editorInstance","updateOriginal","body","contentDocument","contentWindow","error","tinymce","editorId","_editorElement$queryS","editor","setContent","save","appendChild","activeRoomId","activeRoom","activeRoleId","activeRole","itemId","stateItem","roomIds","roomids","roleIds","roleids","isInRoom","includes","toString","hasRole","classList","add"],"mappings":"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"}