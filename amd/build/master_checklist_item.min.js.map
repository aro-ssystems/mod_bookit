{"version":3,"file":"master_checklist_item.min.js","sources":["../src/master_checklist_item.js"],"sourcesContent":["import { BaseComponent, DragDrop } from 'core/reactive';\nimport { masterChecklistReactiveInstance } from 'mod_bookit/master_checklist_reactive';\nimport { SELECTORS } from 'mod_bookit/master_checklist_reactive';\nimport ModalForm from 'core_form/modalform';\nimport { getString } from 'core/str';\n\nexport default class extends BaseComponent {\n\n    create(descriptor) {\n\n        const itemEditBtnSelector = 'EDIT_CHECKLISTITEM_BTN_' + descriptor.element.dataset.bookitChecklistitemId;\n        this.selectors[itemEditBtnSelector] = `#edit-checklistitem-${descriptor.element.dataset.bookitChecklistitemId}`;\n\n        if (descriptor.element.dataset.bookitChecklistitemId == \"2\") {\n            window.console.log('DESCRIPTOR FOR ITEM ID 2 FOUND:');\n            window.console.log('DESCRIPTOR:', descriptor);\n            window.console.log('ELEMENT:', descriptor.element);\n            window.console.log('DATASET:', descriptor.element.dataset);\n            window.console.log('SELECTORS:', this.selectors);\n\n        }\n    }\n\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: masterChecklistReactiveInstance,\n            selectors: selectors || SELECTORS,\n        });\n    }\n\n    getWatchers() {\n        return [];\n    }\n\n    stateReady(state) {\n\n        this.dragdrop = new DragDrop(this);\n\n        const itemEditBtnSelector = 'EDIT_CHECKLISTITEM_BTN_' + this.element.dataset.bookitChecklistitemId;\n\n        this.addEventListener(this.getElement(this.selectors[itemEditBtnSelector]), 'click', (e) => {\n            e.preventDefault();\n            this._handleEditChecklistItemButtonClick(e);\n        });\n\n    }\n\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    validateDropData(dropdata) {\n        return true;\n    }\n\n    drop(dropdata, event) {\n        switch (dropdata.type) {\n            case 'item':\n                this._handleItemDrop(dropdata, event);\n                break;\n            case 'category':\n                this._handleCategoryDrop(dropdata, event);\n                break;\n            default:\n                throw new Error(`Unknown drop type: ${dropdata.type}`);\n        }\n    }\n\n\n    showDropZone(dropdata, event) {\n\n        const root = document.querySelector('html');\n        const primaryColor = getComputedStyle(root).getPropertyValue('--primary');\n\n        switch (dropdata.type) {\n            case 'item':\n            this.element.style.boxShadow = `0px -5px 0px 0px ${primaryColor} inset`;\n            this.element.style.transition = 'box-shadow 0.1s ease';\n                break;\n            case 'category':\n                const itemParentId = parseInt(this.element.dataset.bookitChecklistitemCategoryid);\n                const categoryParentElement = document.getElementById(`bookit-master-checklist-tbody-category-${itemParentId}`);\n                var isActive = parseInt(categoryParentElement.dataset.bookitCategoryActive || 0);\n                if (!isActive) {\n                    categoryParentElement.dataset.bookitCategoryActive = 1;\n                }\n                const categoryLastChild = categoryParentElement.lastElementChild;\n                setTimeout(() => {\n                    categoryParentElement.dataset.bookitCategoryActive = 0;\n                }, 5);\n                categoryLastChild.style.boxShadow = `0px -5px 0px 0px ${primaryColor} inset`;\n                categoryLastChild.style.transition = 'box-shadow 0.1s ease';\n                break;\n            default:\n                throw new Error(`Unknown drop type: ${dropdata.type}`);\n        }\n\n    }\n\n    hideDropZone(dropdata, event) {\n\n        switch (dropdata.type) {\n            case 'item':\n                this.element.style.boxShadow = '';\n                this.element.style.transition = '';\n                break;\n            case 'category':\n                const itemParentId = parseInt(this.element.dataset.bookitChecklistitemCategoryid);\n                const categoryParentElement = document.getElementById(`bookit-master-checklist-tbody-category-${itemParentId}`);\n                const categoryLastChild = categoryParentElement.lastElementChild;\n                var isActive = parseInt(categoryParentElement.dataset.bookitCategoryActive || 0);\n                if (!isActive) {\n                    categoryLastChild.style.boxShadow = '';\n                    categoryLastChild.style.transition = '';\n                }\n                break;\n            default:\n                throw new Error(`Unknown drop type: ${dropdata.type}`);\n        }\n\n    }\n\n    _handleItemDrop(dropdata, event) {\n        dropdata.targetId = parseInt(this.element.dataset.bookitChecklistitemId);\n        dropdata.targetParentId = parseInt(this.element.dataset.bookitChecklistitemCategoryid);\n\n        this.reactive.dispatch('reOrderCategoryItems', dropdata);\n\n        const itemObject = this.reactive.state.checklistitems.get(dropdata.id);\n\n        const itemElement = document.getElementById(`bookit-master-checklist-item-${itemObject.id}`);\n\n        const itemHasChangedParent = dropdata.parentId !== dropdata.targetParentId;\n\n        if (itemHasChangedParent) {\n            itemElement.dataset.bookitChecklistitemCategoryid = dropdata.targetParentId;\n        }\n\n        this.element.parentNode.insertBefore(itemElement, this.element.nextElementSibling);\n    }\n\n\n    _handleCategoryDrop(dropdata, event) {\n        const categoryElement = document.getElementById(`bookit-master-checklist-tbody-category-${dropdata.id}`);\n\n        dropdata.targetId = this.element.dataset.bookitChecklistitemCategoryid;\n        dropdata.targetParentId = categoryElement.dataset.bookitCategoryMasterid;\n\n        this.reactive.dispatch('reOrderCategories', dropdata);\n\n        const tableElement = document.querySelector(this.selectors.TABLE);\n\n        categoryElement.dataset.bookitCategoryActive = 1;\n\n        this.hideDropZone(dropdata, event);\n\n        tableElement.insertBefore(categoryElement, this.element.parentNode.nextElementSibling);\n    }\n\n\n    async _handleEditChecklistItemButtonClick(event) {\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklistitem_form\",\n            moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                masterid: 1,\n                itemid: event.currentTarget.value,\n                categories: Array.from(this.reactive.state.checklistcategories.values()),\n            },\n            modalConfig: {\n                title: await getString('checklistitem', 'mod_bookit'),\n            },\n\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n\n            if (response.detail[0].action === 'delete') {\n                window.console.log('item deleted - removing & unregistering');\n                this.reactive.dispatch('checklistitemDeleted',\n                    {\n                        id: parseInt(response.detail[0].fields.id),\n                        categoryid: parseInt(this.element.dataset.bookitChecklistitemCategoryid),\n                    });\n                this.remove();\n                return;\n            }\n\n            const parentId = parseInt(this.element.dataset.bookitChecklistitemCategoryid);\n\n            const updatedParentId = parseInt(response.detail[0].fields.categoryid);\n\n            if (parentId !== updatedParentId) {\n\n                const targetParentCategoryObject = this.reactive.state.checklistcategories.get(response.detail[0].fields.categoryid);\n\n                const copiedArray = [...targetParentCategoryObject.items];\n\n                const lastItemOfParentCategoryId = copiedArray.pop();\n\n                const data = {\n                    id: parseInt(this.element.dataset.bookitChecklistitemId),\n                    type: 'item',\n                    parentId: parentId,\n                    targetId: lastItemOfParentCategoryId,\n                    targetParentId: updatedParentId,\n                }\n\n                this.reactive.dispatch('reOrderCategoryItems', data);\n\n                this.element.dataset.bookitChecklistitemCategoryid = data.targetParentId;\n\n                const targetParentElement = document.getElementById(`bookit-master-checklist-tbody-category-${data.targetParentId}`);\n\n                targetParentElement.append(this.element);\n            }\n\n\n        });\n\n        modalForm.addEventListener(modalForm.events.LOADED, (response) => {\n            const deleteButton = modalForm.modal.getRoot().find('button[data-action=\"delete\"]');\n\n            deleteButton.on('click', (e) => {\n\n                modalForm.getFormNode().querySelector('input[name=\"action\"]').value = 'delete';\n                modalForm.submitFormAjax();\n\n            });\n        });\n\n        modalForm.show();\n\n    }\n\n    shouldBeVisible() {\n        const activeRoomId = this.reactive.state.activeRoom.id;\n        const activeRoleId = this.reactive.state.activeRole.id;\n        const itemId = parseInt(this.element.dataset.bookitChecklistitemId)\n        const stateItem = this.reactive.state.checklistitems.get(itemId);\n        const roomIds = stateItem.roomids;\n\n        var isInRoom = false;\n\n        if (activeRoomId == 0 || roomIds.includes(activeRoomId.toString())) {\n            isInRoom = true;\n            window.console.log('ITEM IS IN ROOM: ', itemId);\n        } else {\n            window.console.log('ITEM IS NOT IN ROOM: ', itemId);\n        }\n\n        var hasRole = false;\n\n        if (activeRoleId == 0 || parseInt(this.element.dataset.bookitChecklistitemRole) == activeRoleId) {\n            hasRole = true\n        }\n\n        const shouldBeVisible = isInRoom && hasRole;\n\n        if (!shouldBeVisible) {\n            this.element.classList.add('d-none');\n        } else {\n            this.element.classList.remove('d-none');\n        }\n\n        return shouldBeVisible;\n\n    }\n\n}"],"names":["BaseComponent","create","descriptor","itemEditBtnSelector","element","dataset","bookitChecklistitemId","selectors","window","console","log","this","target","document","querySelector","reactive","masterChecklistReactiveInstance","SELECTORS","getWatchers","stateReady","state","dragdrop","DragDrop","addEventListener","getElement","e","preventDefault","_handleEditChecklistItemButtonClick","destroy","undefined","unregister","validateDropData","dropdata","drop","event","type","_handleItemDrop","_handleCategoryDrop","Error","showDropZone","root","primaryColor","getComputedStyle","getPropertyValue","style","boxShadow","transition","itemParentId","parseInt","bookitChecklistitemCategoryid","categoryParentElement","getElementById","bookitCategoryActive","categoryLastChild","lastElementChild","setTimeout","hideDropZone","targetId","targetParentId","dispatch","itemObject","checklistitems","get","id","itemElement","parentId","parentNode","insertBefore","nextElementSibling","categoryElement","bookitCategoryMasterid","tableElement","TABLE","modalForm","ModalForm","formClass","moduleName","args","masterid","itemid","currentTarget","value","categories","Array","from","checklistcategories","values","modalConfig","title","events","FORM_SUBMITTED","response","stateManager","processUpdates","detail","action","fields","categoryid","remove","updatedParentId","lastItemOfParentCategoryId","items","pop","data","append","LOADED","modal","getRoot","find","on","getFormNode","submitFormAjax","show","shouldBeVisible","activeRoomId","activeRoom","activeRoleId","activeRole","itemId","roomIds","roomids","isInRoom","includes","toString","hasRole","bookitChecklistitemRole","classList","add"],"mappings":"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"}