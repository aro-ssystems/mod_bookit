{"version":3,"file":"master_checklist_item.min.js","sources":["../src/master_checklist_item.js"],"sourcesContent":["import {BaseComponent, DragDrop} from 'core/reactive';\nimport { masterChecklistReactiveInstance } from 'mod_bookit/master_checklist_reactive';\nimport { SELECTORS } from 'mod_bookit/master_checklist_reactive';\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport {getString} from 'core/str';\n\nexport default class extends BaseComponent {\n\n    create(descriptor) {\n\n        window.console.log('create item component: ' + descriptor.element.dataset.bookitChecklistitemName);\n\n        const itemEditBtnSelector = 'EDIT_CHECKLISTITEM_BTN_' + descriptor.element.dataset.bookitChecklistitemId;\n\n        this.selectors[itemEditBtnSelector] = `#edit-checklistitem-${descriptor.element.dataset.bookitChecklistitemId}`;\n\n    }\n\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: masterChecklistReactiveInstance,\n            selectors: selectors || SELECTORS,\n        });\n    }\n\n    getWatchers() {\n        // window.console.log('GET WATCHERS');\n        return [\n            // {watch: 'state:updated', handler: this._handleStateEvent},\n            // {watch: 'checklistcategories:created', handler: this._handleCategoryCreatedEvent},\n        ];\n    }\n\n    stateReady(state) {\n\n        // this.relativeDrag = true;\n\n        this.dragdrop = new DragDrop(this);\n\n        // window.console.log('state ready');\n        // window.console.log(state);\n\n        // const name = state.masterchecklists.get(1).name;\n\n        // window.console.log(this.selectors.MASTER_CHECKLIST_TITLE);\n        // window.console.log(this.selectors);\n\n        const itemEditBtnSelector = 'EDIT_CHECKLISTITEM_BTN_' + this.element.dataset.bookitChecklistitemId;\n\n        this.addEventListener(this.getElement(this.selectors[itemEditBtnSelector]), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('EDIT CHECKLIST ITEM BUTTON CLICKED', e.currentTarget);\n            this._handleEditChecklistItemButtonClick(e);\n        });\n\n        // this.addEventListener(this.getElement('button[data-action=\"delete\"]'), 'click', (e) => {\n        //         e.preventDefault();\n        //         window.console.log('DELETE CHECKLIST ITEM BUTTON CLICKED', e.currentTarget);\n        //     });\n\n    }\n\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    validateDropData(dropdata) {\n\n        return true;\n    }\n\n    drop(dropdata, event) {\n        window.console.log('whoops you dropped this on an item', dropdata);\n    }\n\n\nshowDropZone(dropdata, event) {\n\n\n    const root = document.querySelector('html');\n    const primaryColor = getComputedStyle(root).getPropertyValue('--primary');\n\n    window.console.log('primary color: ', primaryColor);\n\n\n        this.element.style.backgroundImage = `linear-gradient(0deg,${primaryColor} 0%, rgba(255, 255, 255, 0) 8%)`;\n        this.element.style.backgroundBlendMode = 'multiply';\n        this.element.style.transition = 'background 0.2s ease';\n\n}\n\nhideDropZone(dropdata, event) {\n\n    this.element.style.backgroundImage = '';\n    this.element.style.backgroundBlendMode = '';\n    this.element.style.transition = '';\n}\n\n    // getDraggableData() {\n    //     return {id: 35, name: \"Something\"};\n    // }\n\n    // dragStart(dragData, event) {\n    //     // This method is called when the drag operation starts.\n    //     window.console.log('Drag started', dragData);\n    // }\n\n    // dragEnd(dragData, event) {\n    //     // This method is called when the drag operation ends.\n    //     window.console.log('Drag ended', dragData);\n    // }\n\n    // _handleStateEvent(event) {\n    //     window.console.log('handle state event');\n    // }\n\n    async _handleEditChecklistItemButtonClick(event) {\n        window.console.log('handle edit checklist item button click');\n        window.console.log(event);\n        const modalForm = new ModalForm({\n            formClass: \"mod_bookit\\\\form\\\\edit_checklistitem_form\",\n            moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                masterid: 1,\n                itemid: event.currentTarget.value,\n                categories: Array.from(this.reactive.state.checklistcategories.values()),\n            },\n            modalConfig: {\n                title: await getString('checklistitem', 'mod_bookit'),\n            },\n\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n        });\n\n        modalForm.addEventListener(modalForm.events.LOADED, (response) => {\n            window.console.log('FORM LOADED');\n            window.console.log(response);\n            const deleteButton = modalForm.modal.getRoot().find('button[data-action=\"delete\"]');\n\n            window.console.log('DELETE BUTTON', deleteButton);\n\n            deleteButton.on('click', (e) => {\n\n                window.console.log('DELETE CHECKLIST ITEM BUTTON CLICKED', e.currentTarget);\n                window.console.log('DELETE ITEM ' + this.element.dataset.bookitChecklistitemId);\n\n                modalForm.getFormNode().querySelector('input[name=\"action\"]').value = 'delete';\n                modalForm.submitFormAjax();\n                // TODO delete function\n            });\n        });\n\n        // modalForm.show();\n        modalForm.show();\n\n    }\n\n\n    // _handleCategoryCreatedEvent(event) {\n    //     window.console.log('handle category created event');\n    //     window.console.log(event.element);\n\n    //     // TODO cats and/or items should be own components\n\n    //     Templates.renderForPromise('mod_bookit/bookit_checklist_category',\n    //         {\n    //             id: event.element.id,\n    //             name: event.element.name,\n    //             order: event.element.order\n    //         })\n    //         .then(({html, js}) => {\n    //             // Templates.appendNodeContents(this.getElement(this.selectors.TABLE_BODY), html, js);\n    //             Templates.appendNodeContents(this.getElement(this.selectors.TABLE), html, js);\n    //         })\n    //         .catch();\n    // }\n\n}"],"names":["BaseComponent","create","descriptor","window","console","log","element","dataset","bookitChecklistitemName","itemEditBtnSelector","bookitChecklistitemId","selectors","target","this","document","querySelector","reactive","masterChecklistReactiveInstance","SELECTORS","getWatchers","stateReady","state","dragdrop","DragDrop","addEventListener","getElement","e","preventDefault","currentTarget","_handleEditChecklistItemButtonClick","destroy","undefined","unregister","validateDropData","dropdata","drop","event","showDropZone","root","primaryColor","getComputedStyle","getPropertyValue","style","backgroundImage","backgroundBlendMode","transition","hideDropZone","modalForm","ModalForm","formClass","moduleName","args","masterid","itemid","value","categories","Array","from","checklistcategories","values","modalConfig","title","events","FORM_SUBMITTED","response","stateManager","processUpdates","detail","LOADED","deleteButton","modal","getRoot","find","on","getFormNode","submitFormAjax","show"],"mappings":"wgBAO6BA,wBAEzBC,OAAOC,YAEHC,OAAOC,QAAQC,IAAI,0BAA4BH,WAAWI,QAAQC,QAAQC,+BAEpEC,oBAAsB,0BAA4BP,WAAWI,QAAQC,QAAQG,2BAE9EC,UAAUF,mDAA8CP,WAAWI,QAAQC,QAAQG,mCAIhFE,OAAQD,kBACT,IAAIE,KAAK,CACZP,QAASQ,SAASC,cAAcH,QAChCI,SAAUC,2DACVN,UAAWA,WAAaO,uCAIhCC,oBAEW,GAMXC,WAAWC,YAIFC,SAAW,IAAIC,mBAASV,YAUvBJ,oBAAsB,0BAA4BI,KAAKP,QAAQC,QAAQG,2BAExEc,iBAAiBX,KAAKY,WAAWZ,KAAKF,UAAUF,sBAAuB,SAAUiB,IAClFA,EAAEC,iBACFxB,OAAOC,QAAQC,IAAI,qCAAsCqB,EAAEE,oBACtDC,oCAAoCH,MAUjDI,eAC0BC,IAAlBlB,KAAKS,eACAA,SAASU,aAItBC,iBAAiBC,iBAEN,EAGXC,KAAKD,SAAUE,OACXjC,OAAOC,QAAQC,IAAI,qCAAsC6B,UAIjEG,aAAaH,SAAUE,aAGbE,KAAOxB,SAASC,cAAc,QAC9BwB,aAAeC,iBAAiBF,MAAMG,iBAAiB,aAE7DtC,OAAOC,QAAQC,IAAI,kBAAmBkC,mBAG7BjC,QAAQoC,MAAMC,+CAA0CJ,qDACxDjC,QAAQoC,MAAME,oBAAsB,gBACpCtC,QAAQoC,MAAMG,WAAa,uBAIxCC,aAAaZ,SAAUE,YAEd9B,QAAQoC,MAAMC,gBAAkB,QAChCrC,QAAQoC,MAAME,oBAAsB,QACpCtC,QAAQoC,MAAMG,WAAa,6CAqBUT,OACtCjC,OAAOC,QAAQC,IAAI,2CACnBF,OAAOC,QAAQC,IAAI+B,aACbW,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,4CACXC,WAAY,sCACZC,KAAM,CACFC,SAAU,EACVC,OAAQjB,MAAMR,cAAc0B,MAC5BC,WAAYC,MAAMC,KAAK5C,KAAKG,SAASK,MAAMqC,oBAAoBC,WAEnEC,YAAa,CACTC,YAAa,kBAAU,gBAAiB,iBAKhDd,UAAUvB,iBAAiBuB,UAAUe,OAAOC,gBAAiBC,gBACpDhD,SAASiD,aAAaC,eAAeF,SAASG,WAGvDpB,UAAUvB,iBAAiBuB,UAAUe,OAAOM,QAASJ,WACjD7D,OAAOC,QAAQC,IAAI,eACnBF,OAAOC,QAAQC,IAAI2D,gBACbK,aAAetB,UAAUuB,MAAMC,UAAUC,KAAK,gCAEpDrE,OAAOC,QAAQC,IAAI,gBAAiBgE,cAEpCA,aAAaI,GAAG,SAAU/C,IAEtBvB,OAAOC,QAAQC,IAAI,uCAAwCqB,EAAEE,eAC7DzB,OAAOC,QAAQC,IAAI,eAAiBQ,KAAKP,QAAQC,QAAQG,uBAEzDqC,UAAU2B,cAAc3D,cAAc,wBAAwBuC,MAAQ,SACtEP,UAAU4B,uBAMlB5B,UAAU6B"}