{"version":3,"file":"master_checklist_category.min.js","sources":["../src/master_checklist_category.js"],"sourcesContent":["import { BaseComponent } from 'core/reactive';\nimport { masterChecklistReactiveInstance } from 'mod_bookit/master_checklist_reactive';\nimport { SELECTORS } from 'mod_bookit/master_checklist_reactive';\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport {getString} from 'core/str';\n\nexport default class extends BaseComponent {\n\n    create(descriptor) {\n\n        window.console.log('create category component: ' + descriptor.element.dataset.bookitCategoryName);\n        window.console.log(descriptor.element.dataset);\n\n        const categoryEditBtnSelector = 'EDIT_CHECKLISTCATEGORY_BTN_' + descriptor.element.dataset.bookitCategoryId;\n\n        this.selectors[categoryEditBtnSelector] = `#edit-checklistcategory-${descriptor.element.dataset.bookitCategoryId}`;\n\n        const categoryTbodySelector = 'CATEGORY_TBODY_' + descriptor.element.dataset.bookitCategoryId;\n        this.selectors[categoryTbodySelector] = `#bookit-master-checklist-tbody-category-${descriptor.element.dataset.bookitCategoryId}`;\n\n        window.console.log(this.selectors);\n\n//         document.addEventListener('categoryRendered', (e) => {\n//     window.console.log('ðŸ”¥ caught event on document:', e.detail);\n// }, true);\n\n    }\n\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: masterChecklistReactiveInstance,\n            selectors: selectors || SELECTORS,\n        });\n    }\n\n    getWatchers() {\n        return [\n            {watch: 'checklistcategories.name:updated', handler: this._refreshEditButtonListener},\n            {watch: 'mod_bookit:master_checklist_category_rendered', handler: this._foo},\n            // {watch: 'state:updated', handler: this._handleStateEvent},\n            // {watch: 'checklistcategories:created', handler: this._handleCategoryCreatedEvent},\n        ];\n    }\n\n    stateReady(state) {\n        window.console.log(this.element.dataset);\n\n        const categoryEditBtnSelector = 'EDIT_CHECKLISTCATEGORY_BTN_' + this.element.dataset.bookitCategoryId;\n\n        this.addEventListener(this.getElement(this.selectors[categoryEditBtnSelector]), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('EDIT CHECKLIST CATEGORY BUTTON CLICKED', e.currentTarget);\n            this._handleEditChecklistCategoryButtonClick(e);\n        });\n\n        const categoryTbodySelector = 'CATEGORY_TBODY_' + this.element.dataset.bookitCategoryId;\n\n        const elem = document.querySelector(this.selectors.MAIN_ELEMENT);\n        window.console.log('elem:', elem);\n\n        // this.addEventListener(document.querySelector(this.selectors.MAIN_ELEMENT), 'mod_bookit:master_checklist_category_rendered', (e) => {\n        //     window.console.log('category rendered event received in component');\n        //     window.console.log(e);\n        //     this._foo(e);\n        // });\n\n        document.addEventListener('mod_bookit:master_checklist_category_rendered', (e) => {\n            window.console.log('NOW THIS', e.detail);\n            this._refreshEditButtonListener(e);\n        }, true);\n\n\n    }\n\n    async _handleEditChecklistCategoryButtonClick(event) {\n        window.console.log('handle edit checklist category button click');\n        const modalForm = new ModalForm({\n            formClass: 'mod_bookit\\\\form\\\\edit_checklist_category_form',\n            moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                id: this.element.dataset.bookitCategoryId,\n                masterid: 1,\n                checklistitems: JSON.stringify(this.reactive.state.checklistcategories.get(this.element.dataset.bookitCategoryId).items),\n            },\n            modalConfig: {\n                title: await getString('checklistcategory', 'mod_bookit'),\n            },\n        })\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n        });\n\n        modalForm.addEventListener(modalForm.events.LOADED, (response) => {\n\n            const deleteButton = modalForm.modal.getRoot().find('button[data-action=\"delete\"]');\n\n            deleteButton.on('click', (e) => {\n                modalForm.getFormNode().querySelector('input[name=\"action\"]').value = 'delete';\n                modalForm.submitFormAjax();\n            });\n        });\n\n        modalForm.show();\n    };\n\n    _refreshEditButtonListener(event) {\n        window.console.log('handle category updated event in component');\n        window.console.log(event);\n\n        this.removeAllEventListeners();\n\n        const categoryEditBtnSelector = 'EDIT_CHECKLISTCATEGORY_BTN_' + this.element.dataset.bookitCategoryId;\n\n        this.addEventListener(this.getElement(this.selectors[categoryEditBtnSelector]), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('EDIT CHECKLIST CATEGORY BUTTON CLICKED', e.currentTarget);\n            this._handleEditChecklistCategoryButtonClick(e);\n        });\n    }\n\n    _foo(event) {\n        window.console.log('foo');\n        window.console.log(event);\n    }\n\n}"],"names":["BaseComponent","create","descriptor","window","console","log","element","dataset","bookitCategoryName","categoryEditBtnSelector","bookitCategoryId","selectors","categoryTbodySelector","this","target","document","querySelector","reactive","masterChecklistReactiveInstance","SELECTORS","getWatchers","watch","handler","_refreshEditButtonListener","_foo","stateReady","state","addEventListener","getElement","e","preventDefault","currentTarget","_handleEditChecklistCategoryButtonClick","elem","MAIN_ELEMENT","detail","event","modalForm","ModalForm","formClass","moduleName","args","id","masterid","checklistitems","JSON","stringify","checklistcategories","get","items","modalConfig","title","events","FORM_SUBMITTED","response","stateManager","processUpdates","LOADED","modal","getRoot","find","on","getFormNode","value","submitFormAjax","show","removeAllEventListeners"],"mappings":"4gBAO6BA,wBAEzBC,OAAOC,YAEHC,OAAOC,QAAQC,IAAI,8BAAgCH,WAAWI,QAAQC,QAAQC,oBAC9EL,OAAOC,QAAQC,IAAIH,WAAWI,QAAQC,eAEhCE,wBAA0B,8BAAgCP,WAAWI,QAAQC,QAAQG,sBAEtFC,UAAUF,2DAAsDP,WAAWI,QAAQC,QAAQG,wBAE1FE,sBAAwB,kBAAoBV,WAAWI,QAAQC,QAAQG,sBACxEC,UAAUC,yEAAoEV,WAAWI,QAAQC,QAAQG,kBAE9GP,OAAOC,QAAQC,IAAIQ,KAAKF,uBAQhBG,OAAQH,kBACT,IAAIE,KAAK,CACZP,QAASS,SAASC,cAAcF,QAChCG,SAAUC,2DACVP,UAAWA,WAAaQ,uCAIhCC,oBACW,CACH,CAACC,MAAO,mCAAoCC,QAAST,KAAKU,4BAC1D,CAACF,MAAO,gDAAiDC,QAAST,KAAKW,OAM/EC,WAAWC,OACPvB,OAAOC,QAAQC,IAAIQ,KAAKP,QAAQC,eAE1BE,wBAA0B,8BAAgCI,KAAKP,QAAQC,QAAQG,sBAEhFiB,iBAAiBd,KAAKe,WAAWf,KAAKF,UAAUF,0BAA2B,SAAUoB,IACtFA,EAAEC,iBACF3B,OAAOC,QAAQC,IAAI,yCAA0CwB,EAAEE,oBAC1DC,wCAAwCH,MAGChB,KAAKP,QAAQC,QAAQG,uBAEjEuB,KAAOlB,SAASC,cAAcH,KAAKF,UAAUuB,cACnD/B,OAAOC,QAAQC,IAAI,QAAS4B,MAQ5BlB,SAASY,iBAAiB,iDAAkDE,IACxE1B,OAAOC,QAAQC,IAAI,WAAYwB,EAAEM,aAC5BZ,2BAA2BM,MACjC,iDAKuCO,OAC1CjC,OAAOC,QAAQC,IAAI,qDACbgC,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,iDACXC,WAAY,sCACZC,KAAM,CACFC,GAAI7B,KAAKP,QAAQC,QAAQG,iBACzBiC,SAAU,EACVC,eAAgBC,KAAKC,UAAUjC,KAAKI,SAASS,MAAMqB,oBAAoBC,IAAInC,KAAKP,QAAQC,QAAQG,kBAAkBuC,QAEtHC,YAAa,CACTC,YAAa,kBAAU,oBAAqB,iBAIpDd,UAAUV,iBAAiBU,UAAUe,OAAOC,gBAAiBC,gBACpDrC,SAASsC,aAAaC,eAAeF,SAASnB,WAGvDE,UAAUV,iBAAiBU,UAAUe,OAAOK,QAASH,WAE5BjB,UAAUqB,MAAMC,UAAUC,KAAK,gCAEvCC,GAAG,SAAUhC,IACtBQ,UAAUyB,cAAc9C,cAAc,wBAAwB+C,MAAQ,SACtE1B,UAAU2B,uBAIlB3B,UAAU4B,OAGd1C,2BAA2Ba,OACvBjC,OAAOC,QAAQC,IAAI,8CACnBF,OAAOC,QAAQC,IAAI+B,YAEd8B,gCAECzD,wBAA0B,8BAAgCI,KAAKP,QAAQC,QAAQG,sBAEhFiB,iBAAiBd,KAAKe,WAAWf,KAAKF,UAAUF,0BAA2B,SAAUoB,IACtFA,EAAEC,iBACF3B,OAAOC,QAAQC,IAAI,yCAA0CwB,EAAEE,oBAC1DC,wCAAwCH,MAIrDL,KAAKY,OACDjC,OAAOC,QAAQC,IAAI,OACnBF,OAAOC,QAAQC,IAAI+B"}