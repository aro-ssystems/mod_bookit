{"version":3,"file":"master_checklist_category.min.js","sources":["../src/master_checklist_category.js"],"sourcesContent":["import { BaseComponent } from 'core/reactive';\nimport { masterChecklistReactiveInstance } from 'mod_bookit/master_checklist_reactive';\nimport { SELECTORS } from 'mod_bookit/master_checklist_reactive';\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport {getString} from 'core/str';\n\nexport default class extends BaseComponent {\n\n    create(descriptor) {\n\n        window.console.log('create category component: ' + descriptor.element.dataset.bookitCategoryName);\n        window.console.log(descriptor.element.dataset);\n\n        const categoryEditBtnSelector = 'EDIT_CHECKLISTCATEGORY_BTN_' + descriptor.element.dataset.bookitCategoryId;\n\n        this.selectors[categoryEditBtnSelector] = `#edit-checklistcategory-${descriptor.element.dataset.bookitCategoryId}`;\n\n        window.console.log(this.selectors);\n\n    }\n\n    static init(target, selectors) {\n        return new this({\n            element: document.querySelector(target),\n            reactive: masterChecklistReactiveInstance,\n            selectors: selectors || SELECTORS,\n        });\n    }\n\n    getWatchers() {\n        // window.console.log('GET WATCHERS');\n        return [\n            // {watch: 'state:updated', handler: this._handleStateEvent},\n            // {watch: 'checklistcategories:created', handler: this._handleCategoryCreatedEvent},\n        ];\n    }\n\n    stateReady(state) {\n\n        // window.console.log('state ready');\n        // window.console.log(state);\n\n        // const name = state.masterchecklists.get(1).name;\n\n        // window.console.log(this.selectors.MASTER_CHECKLIST_TITLE);\n        window.console.log(this.element.dataset);\n\n        const categoryEditBtnSelector = 'EDIT_CHECKLISTCATEGORY_BTN_' + this.element.dataset.bookitCategoryId;\n\n        this.addEventListener(this.getElement(this.selectors[categoryEditBtnSelector]), 'click', (e) => {\n            e.preventDefault();\n            window.console.log('EDIT CHECKLIST CATEGORY BUTTON CLICKED', e.currentTarget);\n            this._handleEditChecklistCategoryButtonClick(e);\n        });\n\n    }\n\n    async _handleEditChecklistCategoryButtonClick(event) {\n        window.console.log('handle edit checklist category button click');\n        const modalForm = new ModalForm({\n            formClass: 'mod_bookit\\\\form\\\\edit_checklist_category_form',\n            moduleName: 'mod_bookit/modal_delete_save_cancel',\n            args: {\n                id: this.element.dataset.bookitCategoryId,\n                masterid: 1\n            },\n            modalConfig: {\n                title: await getString('checklistcategory', 'mod_bookit'),\n            },\n        })\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (response) => {\n            this.reactive.stateManager.processUpdates(response.detail);\n        });\n\n        modalForm.show();\n\n    };\n\n\n\n    // _handleStateEvent(event) {\n    //     window.console.log('handle state event');\n    // }\n\n\n    // _handleCategoryCreatedEvent(event) {\n    //     window.console.log('handle category created event');\n    //     window.console.log(event.element);\n\n    //     // TODO cats and/or items should be own components\n\n    //     Templates.renderForPromise('mod_bookit/bookit_checklist_category',\n    //         {\n    //             id: event.element.id,\n    //             name: event.element.name,\n    //             order: event.element.order\n    //         })\n    //         .then(({html, js}) => {\n    //             // Templates.appendNodeContents(this.getElement(this.selectors.TABLE_BODY), html, js);\n    //             Templates.appendNodeContents(this.getElement(this.selectors.TABLE), html, js);\n    //         })\n    //         .catch();\n    // }\n\n}"],"names":["BaseComponent","create","descriptor","window","console","log","element","dataset","bookitCategoryName","categoryEditBtnSelector","bookitCategoryId","selectors","this","target","document","querySelector","reactive","masterChecklistReactiveInstance","SELECTORS","getWatchers","stateReady","state","addEventListener","getElement","e","preventDefault","currentTarget","_handleEditChecklistCategoryButtonClick","event","modalForm","ModalForm","formClass","moduleName","args","id","masterid","modalConfig","title","events","FORM_SUBMITTED","response","stateManager","processUpdates","detail","show"],"mappings":"4gBAO6BA,wBAEzBC,OAAOC,YAEHC,OAAOC,QAAQC,IAAI,8BAAgCH,WAAWI,QAAQC,QAAQC,oBAC9EL,OAAOC,QAAQC,IAAIH,WAAWI,QAAQC,eAEhCE,wBAA0B,8BAAgCP,WAAWI,QAAQC,QAAQG,sBAEtFC,UAAUF,2DAAsDP,WAAWI,QAAQC,QAAQG,kBAEhGP,OAAOC,QAAQC,IAAIO,KAAKD,uBAIhBE,OAAQF,kBACT,IAAIC,KAAK,CACZN,QAASQ,SAASC,cAAcF,QAChCG,SAAUC,2DACVN,UAAWA,WAAaO,uCAIhCC,oBAEW,GAMXC,WAAWC,OAQPlB,OAAOC,QAAQC,IAAIO,KAAKN,QAAQC,eAE1BE,wBAA0B,8BAAgCG,KAAKN,QAAQC,QAAQG,sBAEhFY,iBAAiBV,KAAKW,WAAWX,KAAKD,UAAUF,0BAA2B,SAAUe,IACtFA,EAAEC,iBACFtB,OAAOC,QAAQC,IAAI,yCAA0CmB,EAAEE,oBAC1DC,wCAAwCH,oDAKPI,OAC1CzB,OAAOC,QAAQC,IAAI,qDACbwB,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,iDACXC,WAAY,sCACZC,KAAM,CACFC,GAAItB,KAAKN,QAAQC,QAAQG,iBACzByB,SAAU,GAEdC,YAAa,CACTC,YAAa,kBAAU,oBAAqB,iBAIpDR,UAAUP,iBAAiBO,UAAUS,OAAOC,gBAAiBC,gBACpDxB,SAASyB,aAAaC,eAAeF,SAASG,WAGvDd,UAAUe"}