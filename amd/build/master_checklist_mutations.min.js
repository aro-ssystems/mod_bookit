define("mod_bookit/master_checklist_mutations",["exports","core/ajax"],(function(_exports,_ajax){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};return _exports.default=class{masterChecklistStateEvent(stateManager,data){}callDynamicForm(stateManager,data){const type=data.formType;data.formData["_qf__mod_bookit_form_edit_checklist_".concat(type,"_form")]=1;const formData=new URLSearchParams(data.formData).toString();_ajax.default.call([{methodname:"core_form_dynamic_form",args:{formdata:formData,form:"mod_bookit\\form\\edit_checklist_".concat(type,"_form")}}])[0].then((response=>{stateManager.processUpdates(JSON.parse(response.data))})).catch((exception=>{window.console.error("AJAX error:",exception)}))}reOrderCategoryItems(stateManager,data){const state=stateManager.state;if(stateManager.setReadOnly(!1),data.parentId!==data.targetParentId){const sourceCategory=state.checklistcategories.get(data.parentId),targetCategory=state.checklistcategories.get(data.targetParentId);sourceCategory.items&&Array.isArray(sourceCategory.items)||(sourceCategory.items=[]),targetCategory.items&&Array.isArray(targetCategory.items)||(targetCategory.items=[]);const idToMove=parseInt(data.id),targetId=parseInt(data.targetId);sourceCategory.items=sourceCategory.items.filter((item=>item!==idToMove));const targetItems=[...targetCategory.items];if(-1===targetItems.indexOf(idToMove)){const targetIndex=targetItems.indexOf(targetId);-1!==targetIndex?targetItems.splice(targetIndex+1,0,idToMove):targetItems.push(idToMove)}targetCategory.items=targetItems;state.checklistitems.get(idToMove).categoryid=parseInt(targetCategory.id)}else{const category=state.checklistcategories.get(data.targetParentId);category.items&&Array.isArray(category.items)||(category.items=[]);const currentItems=[...category.items],idToMove=parseInt(data.id),targetId=parseInt(data.targetId),currentIndex=currentItems.indexOf(idToMove);-1===currentIndex&&currentItems.push(idToMove);if(-1!==currentItems.indexOf(targetId)&&-1!==currentIndex){currentItems.splice(currentIndex,1);const newTargetIndex=currentItems.indexOf(targetId);currentItems.splice(newTargetIndex+1,0,idToMove)}category.items=currentItems}stateManager.setReadOnly(!0)}reOrderCategories(stateManager,data){const masterChecklist=stateManager.state.masterchecklists.get(1);if(!masterChecklist)return window.console.error("Master checklist not found"),void stateManager.setReadOnly(!0);let categoryOrder=masterChecklist.mastercategoryorder?masterChecklist.mastercategoryorder.split(",").map((id=>parseInt(id))):[];const idToMove=parseInt(data.id),targetId=parseInt(data.targetId);categoryOrder=categoryOrder.filter((id=>id!==idToMove));const targetIndex=categoryOrder.indexOf(targetId);-1!==targetIndex?categoryOrder.splice(targetIndex+1,0,idToMove):categoryOrder.push(idToMove);const updatedCategoryOrder=categoryOrder.join(","),formDataObj={id:data.parentId,mastercategoryorder:updatedCategoryOrder,action:"put"};data.formData=formDataObj,data.formType="master",this.callDynamicForm(stateManager,data)}checklistitemCreated(stateManager,data){const state=stateManager.state;stateManager.processUpdates(data),stateManager.setReadOnly(!1);const category=state.checklistcategories.get(data[0].fields.category),currentItems=[...category.items];currentItems.push(data[0].fields.id),category.items=currentItems,stateManager.setReadOnly(!0)}checklistitemDeleted(stateManager,data){const state=stateManager.state;stateManager.setReadOnly(!1);const category=state.checklistcategories.get(data.categoryid),currentItems=[...category.items],itemIndex=currentItems.indexOf(data.id);-1!==itemIndex&&(window.console.log("item found in category items - removing"),currentItems.splice(itemIndex,1),category.items=currentItems),stateManager.setReadOnly(!0)}roomChanged(stateManager,data){const state=stateManager.state;stateManager.setReadOnly(!1),state.activeRoom.id=parseInt(data.id),stateManager.setReadOnly(!0)}roleChanged(stateManager,data){const state=stateManager.state;stateManager.setReadOnly(!1),state.activeRole.id=parseInt(data.id),stateManager.setReadOnly(!0)}},_exports.default}));

//# sourceMappingURL=master_checklist_mutations.min.js.map