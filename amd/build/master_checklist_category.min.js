define("mod_bookit/master_checklist_category",["exports","core/reactive","mod_bookit/master_checklist_reactive","core_form/modalform","core/templates","core/str"],(function(_exports,_reactive,_master_checklist_reactive,_modalform,_templates,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modalform=_interopRequireDefault(_modalform),_templates=_interopRequireDefault(_templates);class _default extends _reactive.BaseComponent{create(descriptor){window.console.log("create category component: "+descriptor.element.dataset.bookitCategoryName),window.console.log(descriptor.element.dataset);const categoryEditBtnSelector="EDIT_CHECKLISTCATEGORY_BTN_"+descriptor.element.dataset.bookitCategoryId;this.selectors[categoryEditBtnSelector]="#edit-checklistcategory-".concat(descriptor.element.dataset.bookitCategoryId);const categoryTbodySelector="CATEGORY_TBODY_"+descriptor.element.dataset.bookitCategoryId;this.selectors[categoryTbodySelector]="#bookit-master-checklist-tbody-category-".concat(descriptor.element.dataset.bookitCategoryId),window.console.log(this.selectors)}static init(target,selectors){return new this({element:document.querySelector(target),reactive:_master_checklist_reactive.masterChecklistReactiveInstance,selectors:selectors||_master_checklist_reactive.SELECTORS})}getWatchers(){return[{watch:"checklistcategories.name:updated",handler:this._refreshEditButtonListener},{watch:"mod_bookit:master_checklist_category_rendered",handler:this._foo}]}stateReady(state){window.console.log(this.element.dataset);const categoryEditBtnSelector="EDIT_CHECKLISTCATEGORY_BTN_"+this.element.dataset.bookitCategoryId;this.addEventListener(this.getElement(this.selectors[categoryEditBtnSelector]),"click",(e=>{e.preventDefault(),window.console.log("EDIT CHECKLIST CATEGORY BUTTON CLICKED",e.currentTarget),this._handleEditChecklistCategoryButtonClick(e)}));this.element.dataset.bookitCategoryId;const elem=document.querySelector(this.selectors.MAIN_ELEMENT);window.console.log("elem:",elem),document.addEventListener("mod_bookit:master_checklist_category_rendered",(e=>{window.console.log("NOW THIS",e.detail),this._refreshEditButtonListener(e)}),!0)}async _handleEditChecklistCategoryButtonClick(event){window.console.log("handle edit checklist category button click");const modalForm=new _modalform.default({formClass:"mod_bookit\\form\\edit_checklist_category_form",moduleName:"mod_bookit/modal_delete_save_cancel",args:{id:this.element.dataset.bookitCategoryId,masterid:1,checklistitems:JSON.stringify(this.reactive.state.checklistcategories.get(this.element.dataset.bookitCategoryId).items)},modalConfig:{title:await(0,_str.getString)("checklistcategory","mod_bookit")}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(response=>{this.reactive.stateManager.processUpdates(response.detail)})),modalForm.addEventListener(modalForm.events.LOADED,(response=>{modalForm.modal.getRoot().find('button[data-action="delete"]').on("click",(e=>{modalForm.getFormNode().querySelector('input[name="action"]').value="delete",modalForm.submitFormAjax()}))})),modalForm.show()}_refreshEditButtonListener(event){window.console.log("handle category updated event in component"),window.console.log(event),this.removeAllEventListeners();const categoryEditBtnSelector="EDIT_CHECKLISTCATEGORY_BTN_"+this.element.dataset.bookitCategoryId;this.addEventListener(this.getElement(this.selectors[categoryEditBtnSelector]),"click",(e=>{e.preventDefault(),window.console.log("EDIT CHECKLIST CATEGORY BUTTON CLICKED",e.currentTarget),this._handleEditChecklistCategoryButtonClick(e)}))}_foo(event){window.console.log("foo"),window.console.log(event)}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=master_checklist_category.min.js.map