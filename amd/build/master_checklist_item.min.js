define("mod_bookit/master_checklist_item",["exports","core/reactive","mod_bookit/master_checklist_reactive","core_form/modalform","core/templates","core/str"],(function(_exports,_reactive,_master_checklist_reactive,_modalform,_templates,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modalform=_interopRequireDefault(_modalform),_templates=_interopRequireDefault(_templates);class _default extends _reactive.BaseComponent{create(descriptor){window.console.log("create item component: "+descriptor.element.dataset.bookitChecklistitemName);const itemEditBtnSelector="EDIT_CHECKLISTITEM_BTN_"+descriptor.element.dataset.bookitChecklistitemId;this.selectors[itemEditBtnSelector]="#edit-checklistitem-".concat(descriptor.element.dataset.bookitChecklistitemId)}static init(target,selectors){return new this({element:document.querySelector(target),reactive:_master_checklist_reactive.masterChecklistReactiveInstance,selectors:selectors||_master_checklist_reactive.SELECTORS})}getWatchers(){return[]}stateReady(state){this.dragdrop=new _reactive.DragDrop(this);const itemEditBtnSelector="EDIT_CHECKLISTITEM_BTN_"+this.element.dataset.bookitChecklistitemId;this.addEventListener(this.getElement(this.selectors[itemEditBtnSelector]),"click",(e=>{e.preventDefault(),window.console.log("EDIT CHECKLIST ITEM BUTTON CLICKED",e.currentTarget),this._handleEditChecklistItemButtonClick(e)}))}destroy(){void 0!==this.dragdrop&&this.dragdrop.unregister()}validateDropData(dropdata){return!0}drop(dropdata,event){dropdata.targetId=this.element.dataset.bookitChecklistitemId,dropdata.targetParentId=this.element.dataset.bookitChecklistitemCategory,window.console.log("whoops you dropped this on an item",dropdata),this.reactive.dispatch("reOrderCategoryItems",dropdata)}showDropZone(dropdata,event){const root=document.querySelector("html"),primaryColor=getComputedStyle(root).getPropertyValue("--primary");window.console.log("primary color: ",primaryColor),this.element.style.backgroundImage="linear-gradient(0deg,".concat(primaryColor," 0%, rgba(255, 255, 255, 0) 8%)"),this.element.style.backgroundBlendMode="multiply",this.element.style.transition="background 0.2s ease"}hideDropZone(dropdata,event){this.element.style.backgroundImage="",this.element.style.backgroundBlendMode="",this.element.style.transition=""}async _handleEditChecklistItemButtonClick(event){window.console.log("handle edit checklist item button click"),window.console.log(event);const modalForm=new _modalform.default({formClass:"mod_bookit\\form\\edit_checklistitem_form",moduleName:"mod_bookit/modal_delete_save_cancel",args:{masterid:1,itemid:event.currentTarget.value,categories:Array.from(this.reactive.state.checklistcategories.values())},modalConfig:{title:await(0,_str.getString)("checklistitem","mod_bookit")}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(response=>{this.reactive.stateManager.processUpdates(response.detail)})),modalForm.addEventListener(modalForm.events.LOADED,(response=>{window.console.log("FORM LOADED"),window.console.log(response);const deleteButton=modalForm.modal.getRoot().find('button[data-action="delete"]');window.console.log("DELETE BUTTON",deleteButton),deleteButton.on("click",(e=>{window.console.log("DELETE CHECKLIST ITEM BUTTON CLICKED",e.currentTarget),window.console.log("DELETE ITEM "+this.element.dataset.bookitChecklistitemId),modalForm.getFormNode().querySelector('input[name="action"]').value="delete",modalForm.submitFormAjax()}))})),modalForm.show()}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=master_checklist_item.min.js.map