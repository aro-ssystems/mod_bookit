{"version":3,"file":"master_checklist_reactive.min.js","sources":["../src/master_checklist_reactive.js"],"sourcesContent":["import { Reactive } from 'core/reactive';\nimport Mutations from 'mod_bookit/master_checklist_mutations';\n\nexport const SELECTORS = {\n            TABLE: '#mod-bookit-master-checklist-table',\n            MAIN_ELEMENT: '#mod-bookit-master-checklist',\n            ADD_CHECKLIST_CATEGORY_BUTTON: '#add-checklist-category-button',\n            ADD_CHECKLIST_ITEM_BUTTON: '#add-checklist-item-button',\n            MASTER_CHECKLIST_TITLE: '#mod-bookit-master-checklist-title',\n            ALL_CATEGORY_TABLE_ROWS: 'tr[data-bookit-category-id]',\n            ALL_ITEM_TABLE_ROWS: 'tr[data-bookit-checklistitem-id]',\n            TABLE_BODY: '#mod-bookit-master-checklist-tbody',\n            ALL_ROLE_OPTIONS: 'option[data-bookit-roleoption]',\n            ALL_ROOM_OPTIONS: 'option[data-bookit-roomoption]',\n        };\n\n\nconst EVENTNAME = 'mod_bookit:master_checklist_state_event'\n\nexport const masterChecklistReactiveInstance = new Reactive({\n        eventName: EVENTNAME,\n        eventDispatch: dispatchMasterChecklistStateEvent,\n        // target: document.getElementById(elementId),\n        mutations: new Mutations(),\n        name: 'Moodle Bookit Master Checklist',\n        // state: {}\n    });\n\nexport const init = (elementId) => {\n\n    window.console.log('THIS IS REACTIVE');\n\n    // const masterChecklistReactiveInstance = new Reactive({\n    //     eventName: EVENTNAME,\n    //     eventDispatch: dispatchMasterChecklistStateEvent,\n    //     target: document.getElementById(elementId),\n    //     mutations: new Mutations(),\n    //     name: 'Moodle Bookit Master Checklist',\n    //     // state: {}\n    // });\n\n    loadState(masterChecklistReactiveInstance);\n\n    // return new MasterChecklist({\n    //     element: document.getElementById(elementId),\n    //     reactive: masterChecklistReactiveInstance,\n    //     selectors: SELECTORS,\n    // });\n}\n\nfunction dispatchMasterChecklistStateEvent(detail, target) {\n\n    window.console.log('dispatch master checklist state event function');\n    if (target === undefined) {\n        target = document;\n    }\n    target.dispatchEvent(\n        new CustomEvent(\n            EVENTNAME,\n            {\n                bubbles: true,\n                detail: detail,\n            }\n        )\n    );\n}\n\n/**\n * Load the initial state.\n *\n * This iterates over the initial tree of category items, and captures the data required for the state from each category.\n * It also captures a count of the number of children in each list.\n *\n * @param {Reactive} reactive\n * @return {Promise<void>}\n */\nconst loadState = async(reactive) => {\n\n    window.console.log('loading state');\n\n    const tableElement = document.querySelector(SELECTORS.TABLE);\n\n\n    const stateData = {\n        masterchecklists: [{\n            id: tableElement.dataset.masterChecklistId,\n            name: tableElement.dataset.masterChecklistName\n        }],\n        activechecklist: {\n            id: tableElement.dataset.masterChecklistId,\n        },\n        checklistcategories: [],\n        checklistitems: [],\n        roles: [],\n        rooms: [],\n        activeRole: {\n            id: 1,\n        },\n        activeRoom: {\n            id: 1,\n        },\n    };\n    const checklistCategoryRows = document.querySelectorAll(SELECTORS.ALL_CATEGORY_TABLE_ROWS);\n    checklistCategoryRows.forEach(categoryRow => {\n\n        const categoryItemRows = document.querySelectorAll(`tr[data-bookit-checklistitem-category=\"${categoryRow.dataset.bookitCategoryId}\"]`);\n\n        const checklistItems = [];\n        categoryItemRows.forEach(itemRow => {\n            checklistItems.push(itemRow.dataset.bookitChecklistitemId)\n        });\n\n        stateData.checklistcategories.push({\n            id: categoryRow.dataset.bookitCategoryId,\n            name: categoryRow.dataset.bookitCategoryName,\n            order: categoryRow.dataset.bookitCategoryOrder,\n            items: checklistItems\n        });\n    });\n\n    const checklistItemRows = document.querySelectorAll(SELECTORS.ALL_ITEM_TABLE_ROWS);\n    checklistItemRows.forEach(itemRow => {\n        stateData.checklistitems.push({\n            id: itemRow.dataset.bookitChecklistitemId,\n            name: itemRow.dataset.bookitChecklistitemName,\n            order: itemRow.dataset.bookitChecklistitemOrder,\n            category: itemRow.dataset.bookitCategoryId,\n            roomid: itemRow.dataset.bookitChecklistitemRoom,\n            roomname: itemRow.dataset.bookitChecklistitemRoomname,\n            roleid: itemRow.dataset.bookitChecklistitemRole,\n            rolename: itemRow.dataset.bookitChecklistitemRolename,\n        });\n    });\n\n    // Get all room options\n    const roomOptions = document.querySelectorAll(SELECTORS.ALL_ROOM_OPTIONS);\n    roomOptions.forEach(roomOption => {\n        stateData.rooms.push({\n            id: roomOption.value,\n            name: roomOption.dataset.bookitRoomname\n        });\n    });\n\n    // Get all role options\n    const roleOptions = document.querySelectorAll(SELECTORS.ALL_ROLE_OPTIONS);\n    roleOptions.forEach(roleOption => {\n        stateData.roles.push({\n            id: roleOption.value,\n            name: roleOption.dataset.bookitRolename\n        });\n    });\n\n    // const categoryLists = document.querySelectorAll(SELECTORS.CATEGORY_LIST);\n    // categoryLists.forEach(categoryList => {\n    //     stateData.categoryLists.push({\n    //         id: categoryList.dataset.categoryid,\n    //         childCount: categoryList.querySelectorAll(SELECTORS.CATEGORY_ITEM).length,\n    //     });\n    // });\n    reactive.setInitialState(stateData);\n};"],"names":["SELECTORS","TABLE","MAIN_ELEMENT","ADD_CHECKLIST_CATEGORY_BUTTON","ADD_CHECKLIST_ITEM_BUTTON","MASTER_CHECKLIST_TITLE","ALL_CATEGORY_TABLE_ROWS","ALL_ITEM_TABLE_ROWS","TABLE_BODY","ALL_ROLE_OPTIONS","ALL_ROOM_OPTIONS","EVENTNAME","masterChecklistReactiveInstance","Reactive","eventName","eventDispatch","detail","target","window","console","log","undefined","document","dispatchEvent","CustomEvent","bubbles","mutations","Mutations","name","elementId","loadState","async","tableElement","querySelector","stateData","masterchecklists","id","dataset","masterChecklistId","masterChecklistName","activechecklist","checklistcategories","checklistitems","roles","rooms","activeRole","activeRoom","querySelectorAll","forEach","categoryRow","categoryItemRows","bookitCategoryId","checklistItems","itemRow","push","bookitChecklistitemId","bookitCategoryName","order","bookitCategoryOrder","items","bookitChecklistitemName","bookitChecklistitemOrder","category","roomid","bookitChecklistitemRoom","roomname","bookitChecklistitemRoomname","roleid","bookitChecklistitemRole","rolename","bookitChecklistitemRolename","roomOption","value","bookitRoomname","roleOption","bookitRolename","reactive","setInitialState"],"mappings":"maAGaA,UAAY,CACbC,MAAO,qCACPC,aAAc,+BACdC,8BAA+B,iCAC/BC,0BAA2B,6BAC3BC,uBAAwB,qCACxBC,wBAAyB,8BACzBC,oBAAqB,mCACrBC,WAAY,qCACZC,iBAAkB,iCAClBC,iBAAkB,qEAIxBC,UAAY,0CAELC,gCAAkC,IAAIC,mBAAS,CACpDC,UAAWH,UACXI,uBA6BmCC,OAAQC,QAE/CC,OAAOC,QAAQC,IAAI,uDACJC,IAAXJ,SACAA,OAASK,UAEbL,OAAOM,cACH,IAAIC,YACAb,UACA,CACIc,SAAS,EACTT,OAAQA,WAtChBU,UAAW,IAAIC,oCACfC,KAAM,0HAIOC,YAEjBX,OAAOC,QAAQC,IAAI,oBAWnBU,UAAUlB,wCAmCRkB,UAAYC,MAAAA,WAEdb,OAAOC,QAAQC,IAAI,uBAEbY,aAAeV,SAASW,cAAcjC,UAAUC,OAGhDiC,UAAY,CACdC,iBAAkB,CAAC,CACfC,GAAIJ,aAAaK,QAAQC,kBACzBV,KAAMI,aAAaK,QAAQE,sBAE/BC,gBAAiB,CACbJ,GAAIJ,aAAaK,QAAQC,mBAE7BG,oBAAqB,GACrBC,eAAgB,GAChBC,MAAO,GACPC,MAAO,GACPC,WAAY,CACRT,GAAI,GAERU,WAAY,CACRV,GAAI,IAGkBd,SAASyB,iBAAiB/C,UAAUM,yBAC5C0C,SAAQC,oBAEpBC,iBAAmB5B,SAASyB,kEAA2DE,YAAYZ,QAAQc,wBAE3GC,eAAiB,GACvBF,iBAAiBF,SAAQK,UACrBD,eAAeE,KAAKD,QAAQhB,QAAQkB,0BAGxCrB,UAAUO,oBAAoBa,KAAK,CAC/BlB,GAAIa,YAAYZ,QAAQc,iBACxBvB,KAAMqB,YAAYZ,QAAQmB,mBAC1BC,MAAOR,YAAYZ,QAAQqB,oBAC3BC,MAAOP,oBAIW9B,SAASyB,iBAAiB/C,UAAUO,qBAC5CyC,SAAQK,UACtBnB,UAAUQ,eAAeY,KAAK,CAC1BlB,GAAIiB,QAAQhB,QAAQkB,sBACpB3B,KAAMyB,QAAQhB,QAAQuB,wBACtBH,MAAOJ,QAAQhB,QAAQwB,yBACvBC,SAAUT,QAAQhB,QAAQc,iBAC1BY,OAAQV,QAAQhB,QAAQ2B,wBACxBC,SAAUZ,QAAQhB,QAAQ6B,4BAC1BC,OAAQd,QAAQhB,QAAQ+B,wBACxBC,SAAUhB,QAAQhB,QAAQiC,iCAKdhD,SAASyB,iBAAiB/C,UAAUU,kBAC5CsC,SAAQuB,aAChBrC,UAAUU,MAAMU,KAAK,CACjBlB,GAAImC,WAAWC,MACf5C,KAAM2C,WAAWlC,QAAQoC,oBAKbnD,SAASyB,iBAAiB/C,UAAUS,kBAC5CuC,SAAQ0B,aAChBxC,UAAUS,MAAMW,KAAK,CACjBlB,GAAIsC,WAAWF,MACf5C,KAAM8C,WAAWrC,QAAQsC,oBAWjCC,SAASC,gBAAgB3C"}